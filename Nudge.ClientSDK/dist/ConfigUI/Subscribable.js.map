{"version":3,"file":"Subscribable.js","sourceRoot":"","sources":["../../ConfigUI/Subscribable.ts"],"names":[],"mappings":"AAAA;IAGI,sBAAY,YAAe;QAA3B,iBAEC;QAHgB,gBAAW,GAA2B,EAAE,CAAC;QAK1D,cAAS,GAAG,UAAC,WAA+B;YACxC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC,CAAA;QAED,aAAQ,GAAG,cAAS,OAAA,KAAI,CAAC,YAAY,EAAjB,CAAiB,CAAC;QACtC,aAAQ,GAAG,UAAC,QAAW;YACnB,IAAM,QAAQ,GAAG,KAAI,CAAC,YAAY,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;YAC7B,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACvB,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAA,UAAU,IAAI,OAAA,UAAU,CAAC,QAAQ,CAAC,EAApB,CAAoB,CAAC,CAAC;aAChE;QACL,CAAC,CAAA;QAdG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACrC,CAAC;IAcL,mBAAC;AAAD,CAAC,AAnBD,IAmBC","sourcesContent":["export default class Subscribable<T> {\r\n    private currentValue: T;\r\n    private readonly subscribers: ((value: T) => void)[] = [];\r\n    constructor(currentValue: T) {\r\n        this.currentValue = currentValue;\r\n    }\r\n\r\n    subscribe = (subscribeFn: (value: T) => void): void => {\r\n        this.subscribers.push(subscribeFn);\r\n    }\r\n\r\n    getValue = (): T => this.currentValue;\r\n    setValue = (newValue: T) => {\r\n        const oldValue = this.currentValue;\r\n        this.currentValue = newValue;\r\n        if (oldValue !== newValue) {\r\n            this.subscribers.forEach(subscriber => subscriber(newValue));\r\n        }\r\n    }\r\n}"]}