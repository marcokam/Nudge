{"version":3,"file":"uriUtils.js","sourceRoot":"","sources":["../../Uris/uriUtils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAU,MAAM,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtE,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAE7C,IAAM,eAAe,GAAG,cAAM,OAAA,UAAU,CAAC,sBAAsB,CAAC,EAAlC,CAAkC,CAAC;AACjE,IAAM,mBAAmB,GAAG,UAAU,GAAgB,IAAK,OAAA,UAAC,CAAI,IAAmB,OAAA,QAAQ,CAAC,cAAM,OAAA,GAAG,CAAC,CAAC,CAAC,EAAN,CAAM,CAAC,EAAtB,CAAsB,EAA9C,CAA8C,CAAC;AAC1G,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,GAAgB;IAAhB,oBAAA,EAAA,QAAgB;IAAK,OAAA,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC;SACtD,KAAK,CAAC,mBAAmB,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;QAC/C,CAAC,CAAC,GAAG;QACL,CAAC,CAAC,eAAe,EAAE,EAFW,CAEX,CAAC,CAAC;SACxB,GAAG,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAd,CAAc,CAAC;SAC1B,KAAK,CAAC,mBAAmB,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACvD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QACzB,CAAC,CAAC,eAAe,EAAE,EAFa,CAEb,CAAC,CAAC;SACxB,KAAK,CAAC,mBAAmB,CAAC,UAAA,EAAE,IAAI,OAAA,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/C,CAAC,CAAC,EAAE;QACJ,CAAC,CAAC,eAAe,EAAE,EAFU,CAEV,CAAC,CAAC;AAVgB,CAUhB,CAAA;AAG7B,MAAM,CAAC,IAAM,OAAO,GAAG,UAAC,OAAe,IAAK,OAAA,UAAC,EAAU,IAAK,OAAG,OAAO,SAAI,EAAI,EAAlB,CAAkB,EAAlC,CAAkC,CAAC","sourcesContent":["import { Either, either, tryCatch } from \"~/Util/fp/Instances/Either\";\r\nimport { throwError } from \"~/Util/fp/error\";\r\n\r\nconst throwInvalidUri = () => throwError(\"Invalid uri provided\");\r\nconst tryCatchOnCondition = <E, A, B>(run: (a: A) => B) => (a: A): Either<E, B> => tryCatch(() => run(a));\r\nexport const uriToId = (uri: string = \"\") => either.of(uri)\r\n    .chain(tryCatchOnCondition(uri => uri.includes(\"/\")\r\n        ? uri\r\n        : throwInvalidUri()))\r\n    .map(uri => uri.split(\"/\"))\r\n    .chain(tryCatchOnCondition(parts => parts[parts.length - 1]\r\n        ? parts[parts.length - 1]\r\n        : throwInvalidUri()))\r\n    .chain(tryCatchOnCondition(id => !isNaN(Number(id))\r\n        ? id\r\n        : throwInvalidUri()))\r\n\r\n\r\nexport const idToUri = (baseUri: string) => (id: string) => `${baseUri}/${id}`;\r\n"]}