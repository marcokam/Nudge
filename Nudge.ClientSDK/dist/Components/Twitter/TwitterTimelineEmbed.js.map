{"version":3,"file":"TwitterTimelineEmbed.js","sourceRoot":"","sources":["../../../Components/Twitter/TwitterTimelineEmbed.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,gBAAgB,MAAM,yBAAyB,CAAC;AACvD,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AAMjD,6FAA6F;AAC7F,IAAM,mBAAmB,GAAG,IAAI,gBAAgB,CAAC,cAAM,OAAA,iBAAiB,CAAC,yCAAyC,CAAC,CAAC,IAAI,CAAC,cAAM,OAAA,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,EAApB,CAAoB,CAAC,EAA7F,CAA6F,CAAC,CAAC;AAMtJ;IAAmC,wCAAgB;IAG/C,8BAAY,KAAY;QAAxB,YACI,kBAAM,KAAK,CAAC,SAEf;QALO,eAAS,GAAY,KAAK,CAAC;QAMnC,YAAM,GAAG;YACL,OAAO,6BAAK,GAAG,EAAE,KAAI,CAAC,iBAAiB,GAAI,CAAC;QAChD,CAAC,CAAA;QACD,uBAAiB,GAAG;YAChB,mBAAmB,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC;gBAClC,IAAI,KAAI,CAAC,SAAS,EAAE;oBAChB,OAAO;iBACV;gBAED,2GAA2G;gBAC3G,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,cAAc,CAC/B;oBACI,UAAU,EAAE,SAAS;oBACrB,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU;iBACpC,EACD,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAC9B;oBACI,MAAM,EAAE,4CAA4C;oBACpD,GAAG,EAAE,IAAI;oBACT,UAAU,EAAE,KAAI,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC;iBACzC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC,CAAA;QAED,0BAAoB,GAAG;YACnB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAA;QA5BG,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC;;IAC/C,CAAC;IA4BL,2BAAC;AAAD,CAAC,AAlCD,CAAmC,SAAS,GAkC3C;AACD,mCAAmC;AACnC,sBAAsB;AACtB,+CAA+C;AAC/C,KAAK;AACL,6CAA6C;AAE7C,eAAe,oBAAoB,CAAC","sourcesContent":["import React, { Component } from \"react\";\r\nimport AsyncInitializer from \"~/Util/AsyncInitializer\";\r\nimport { asyncScriptLoader } from \"~/Util/utils\";\r\n//import PropTypes from \"prop-types\";\r\n\r\n// Allow window object to have twttr prop\r\ndeclare var window: any;\r\n\r\n//TODO: This library may need to be loaded differently in some clients (eg. Chrome Extension)\r\nconst twitterScriptLoader = new AsyncInitializer(() => asyncScriptLoader(\"https://platform.twitter.com/widgets.js\").then(() => window.twttr.ready()));\r\n\r\ninterface Props {\r\n    screenName: string;\r\n    tweetLimit: number;\r\n}\r\nclass TwitterTimelineEmbed extends Component<Props> {\r\n    private unmounted: boolean = false;\r\n    private readonly timelineContainer: React.RefObject<HTMLDivElement>\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.timelineContainer = React.createRef();\r\n    }\r\n    render = () => {\r\n        return <div ref={this.timelineContainer} />;\r\n    }\r\n    componentDidMount = () => {\r\n        twitterScriptLoader.initialize().then(() => {\r\n            if (this.unmounted) {\r\n                return;\r\n            }\r\n            \r\n            // See https://developer.twitter.com/en/docs/twitter-for-websites/timelines/guides/parameter-reference.html\r\n            window.twttr.widgets.createTimeline(\r\n                {\r\n                    sourceType: \"profile\",\r\n                    screenName: this.props.screenName,\r\n                },\r\n                this.timelineContainer.current,\r\n                {\r\n                    chrome: \"noheader, nofooter, noborders, transparent\",\r\n                    dnt: true,\r\n                    tweetLimit: this.props.tweetLimit || 3,\r\n                });\r\n        });\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.unmounted = true;\r\n    }\r\n}\r\n//TODO: This is a TypeScript error.\r\n// const propTypes = {\r\n//     screenName: PropTypes.string.isRequired,\r\n// };\r\n//TwitterTimelineEmbed.propTypes = propTypes;\r\n\r\nexport default TwitterTimelineEmbed;"]}