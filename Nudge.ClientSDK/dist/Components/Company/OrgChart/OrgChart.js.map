{"version":3,"file":"OrgChart.js","sourceRoot":"","sources":["../../../../Components/Company/OrgChart/OrgChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback, useMemo, Fragment } from \"react\";\r\n\r\nimport { Cache } from \"~/Data/DataInterfaces\";\r\n\r\nimport { entries } from \"~/Util/fp/object\";\r\nimport { noop } from \"~/Util/fp/function\";\r\nimport { List } from \"~/Util/fp/Instances/List\";\r\nimport { ApiStates, apiStates } from \"~/Util/apiUtils\";\r\nimport { Compare } from \"~/Util/fp/Instances/Compare\";\r\nimport { OrgChartPerson, ByLevelByRole } from \"./hooks\";\r\nimport { numCompareByDir, Ordering } from \"~/Util/sortUtils\";\r\nimport { option, tryCatch } from \"~/Util/fp/Instances/Option\";\r\nimport { simplePlural } from \"~/Util/nameUtils\";\r\nimport { strengthToText, RelationshipStrength } from \"~/Data/Person/Relationship/relationshipData\";\r\nimport { recommendedSort } from \"~/Data/Person/Recommender/personRecommenderData\";\r\nimport { byRoleGroupName } from \"~/Data/Person/Role/jobRoleData\";\r\nimport { JobLevelDisplay } from \"~/Data/Person/Level/jobLevelData\";\r\n\r\nimport { WiFiIcon } from \"~/Components/Icons/Icons\";\r\nimport { PersonSummary } from \"~/Components/Person/PersonSummary\";\r\nimport { Tooltip } from \"~/Components/UI/Tooltip/Tooltip\";\r\nimport { FlaggedDataReason, flaggedDataReason } from \"~/Data/Person/Metadata/flagData\";\r\n\r\n\r\ninterface CellOpen {\r\n    [k: string]: boolean;\r\n}\r\nexport interface PersonProfileProps {\r\n    size?: number;\r\n    name: string;\r\n    title: string;\r\n    imageUrl?: string;\r\n    imageTitle?: string;\r\n    className?: string;\r\n    onClick?: (event: Event) => void;\r\n}\r\ninterface OrgChartProps {\r\n    onScroll: () => void;\r\n    apiState: keyof ApiStates;\r\n    count: number;\r\n    allRoles: string[];\r\n    allPeople: ByLevelByRole;\r\n    allRolesOrdering: Ordering;\r\n    cells: [string, (k: string) => void];\r\n    cellFooter: React.Component;\r\n    open: [CellOpen, (f: (prev: CellOpen) => CellOpen) => void];\r\n    PersonProfile: React.FunctionComponent<PersonProfileProps>;\r\n    cache?: Cache;\r\n    peoplePerCell: number;\r\n    ignoreTeamInteractions: boolean;\r\n    flaggedUris?: Record<string,string>;\r\n    flagUri?: (uri: string, reason?: FlaggedDataReason) => void;\r\n};\r\n\r\nconst formatRole = (role = \"\") => role.replace(/ /g, \"_\");\r\nconst getPersonId = (personUri: string) => personUri.replace(/\\//g, \"_\")\r\n\r\nexport const OrgChart: React.FunctionComponent<OrgChartProps> = ({\r\n    onScroll,\r\n    apiState,\r\n    count,\r\n    allRoles,\r\n    allPeople,\r\n    allRolesOrdering,\r\n    cells: [cellSelected, setCellSelected],\r\n    cellFooter,\r\n    open: [cellOpen, setCellOpen],\r\n    PersonProfile,\r\n    cache,\r\n    peoplePerCell = 4,\r\n    ignoreTeamInteractions = false,\r\n    flaggedUris = {},\r\n    flagUri = noop,\r\n}) => {\r\n    const [showPersonSummary, setShowPersonSummary] = useState();\r\n    const scrollRef = useRef(null);\r\n    const hideSummary = () => {\r\n        setShowPersonSummary(null);\r\n    }\r\n    const showSummary = (person: OrgChartPerson) => () => {\r\n        setShowPersonSummary(\r\n            <Tooltip parent={scrollRef.current} targetSelector={`#${getPersonId(person.uri)}`} hide={hideSummary} className=\"bg-white z-5 relative\">\r\n                <span className=\"absolute pa3 pointer black-60 hover-bold f4\" style={{ top: 0, right: 0 }} onClick={hideSummary}>✕</span>\r\n                <PersonSummary person={person} PersonProfile={PersonProfile} cache={cache} flaggedUris={flaggedUris} flagUri={(prefix, reason) => {\r\n                    flagUri(prefix, reason);\r\n                    if (reason === flaggedDataReason.incorrectCompany) {\r\n                        hideSummary();\r\n                    }\r\n                }} />\r\n            </Tooltip>\r\n        );\r\n    };\r\n    const navigateToCell = useCallback((key, cb?: Function) => {\r\n        setCellSelected(key);\r\n        // These should probably be IO.of\r\n        return option.of((n: HTMLElement) => {\r\n            let scrollContainer: HTMLDivElement;\r\n            let scrollTimeout: NodeJS.Timeout;\r\n            const handler = () => {    \r\n                clearTimeout(scrollTimeout);\r\n                scrollTimeout = setTimeout(() => {\r\n                    if (cb) cb({ currentTarget: n });\r\n                    if (scrollRef.current) {\r\n                        scrollContainer = scrollRef.current as unknown as HTMLDivElement;\r\n                        scrollContainer.removeEventListener(\"scroll\", handler);\r\n                    }\r\n                }, 200);\r\n            }\r\n            if (scrollRef.current) {\r\n                scrollContainer = scrollRef.current as unknown as HTMLDivElement;\r\n                scrollContainer.addEventListener(\"scroll\", handler);\r\n                handler();                \r\n            }\r\n            n.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                inline: \"center\",\r\n                block: \"center\",\r\n            });\r\n            return n;\r\n        })\r\n            .ap(option.of(document.querySelector(`#${key}`)))\r\n            .getOrElse(() => undefined);\r\n    }, [setCellSelected]);\r\n    const risks = useMemo(() => ({\r\n        [\"Weakening Exec Relationships\"]: allPeople\r\n            .filter(([displayLevel]) => displayLevel === JobLevelDisplay[\"C-Level\"] || displayLevel === JobLevelDisplay.VP)\r\n            .reduce((acc, [_, byRole]) =>\r\n                acc.concat(\r\n                    List.fromArray(entries(byRole))\r\n                        .chain(([_, people]) => List.fromArray(people))\r\n                        .toArray()    \r\n                ), [] as OrgChartPerson[])\r\n            .filter(e =>\r\n                tryCatch(() => e.risks)\r\n                    .map(risks => risks.exec && risks.weakened)\r\n                    .getOrElse(() => false))\r\n            .sort(recommendedSort(byRoleGroupName(allRolesOrdering)).run)\r\n    }), [allPeople, allRolesOrdering]);\r\n    \r\n    const tagClasses = \"ba b--red br-pill ph2 red f6 fw6 no-user-select nowrap\";\r\n\r\n    return (\r\n        <Fragment>\r\n            {entries(risks).map(([riskName, people]) => (\r\n                <div key={riskName} className=\"flex items-center bg-nudge-lightest-red mw-100 overflow-x-auto overflow-y-hidden bb b--black-10\">\r\n                    {people.length > 0 && <div className=\"sticky h-100 flex items-center bg-nudge-lightest-red ph3 br b--black-10\" style={{ left: 0 }}><span className={tagClasses}>{riskName}</span></div>}\r\n                    {people.map(p => (\r\n                        <div key={p.uri} title=\"Click to review\" className=\"pointer pa3 link hover-bg-nudge-light-blue br b--black-10\" onClick={() => {\r\n                            navigateToCell(getPersonId(p.uri), showSummary(p));\r\n                        }}>\r\n                            <PersonProfile name={p.name} title={p.title} imageTitle=\"Click to review\" className=\"mw4\" />\r\n                            {tryCatch(() => {\r\n                                const { teamInteractions = {} } = p;\r\n                                const { strength = RelationshipStrength.none, maxStrength = RelationshipStrength.none } = teamInteractions;\r\n                                return { strength: strengthToText(strength), maxStrength: strengthToText(maxStrength) };\r\n                            }).map(({ strength, maxStrength }) => (\r\n                                <div className=\"flex f7 nowrap\">\r\n                                    <div>\r\n                                        <span className=\"red fw6 nowrap mr1\">\r\n                                            {maxStrength}\r\n                                        </span>\r\n                                        →\r\n                                        <span className=\"red fw6 nowrap ml1\">\r\n                                            {strength}\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            )).getOrElse(() => null)}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n            <div ref={scrollRef} onScroll={onScroll} className=\"overflow-auto relative h-100\">\r\n                {showPersonSummary}\r\n                <table className={`collapse glow ${apiState === apiStates.fetching ? \"o-70\" : \"\"}`}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"sticky z-3 bg-white bb br b--black-10 fw6\" style={{ top: 0, left: 0 }}>\r\n                                <span className=\"flex justify-center sticky nowrap ba b--white\" style={{ top: 0 }}>\r\n                                    {count} {simplePlural(count, \"contact\")}\r\n                                </span>\r\n                            </th>\r\n                            {allRoles\r\n                                .map(role => [role, formatRole(role)])\r\n                                .map(([role, roleNoSpaces]) => (\r\n                                    <th\r\n                                        key={`header_${role}`}\r\n                                        className=\"sticky z-2 bg-white bb br bl b--black-10\"\r\n                                        style={{ top: 0 }}\r\n                                        id={`header_${roleNoSpaces}`}\r\n                                    >\r\n                                        <span className=\"flex justify-center ph2 pv1 white-90 nowrap no-user-select bg-dark-green ba b--dark-green\">\r\n                                            {role}\r\n                                        </span>\r\n                                    </th>\r\n                                ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allPeople\r\n                            .map(([level, roles = {}]) => ({ level, roles, roleEntries: Object.entries(roles) }))\r\n                            .map(({ level, roles, roleEntries }) => ({\r\n                                level,\r\n                                roles,\r\n                                rolesCount: roleEntries.reduce((acc, [_, people = []]) => acc + people.length, 0),\r\n                                sortedRolesEntries: roleEntries\r\n                                    .sort(Compare.of(numCompareByDir(true))\r\n                                        .contramap<[string, Partial<OrgChartPerson>[]]>(([role]) => allRolesOrdering[role]).run)\r\n                            }))\r\n                            .map(({ level, roles, rolesCount, sortedRolesEntries }) => (\r\n                                <tr key={level}>\r\n                                    <td\r\n                                        className=\"sticky collapse z-1 bg-white v-top fw6 bt bb b--black-10\"\r\n                                        style={{ left: 0 }}\r\n                                    >\r\n                                        <span\r\n                                            className=\"flex z-2 justify-center sticky ph2 pv1 white-90 nowrap no-user-select bg-purple ba b--purple\"\r\n                                            style={{ top: 31 }}\r\n                                        >\r\n                                            {level} ({rolesCount})\r\n                                        </span>\r\n                                        <span className=\"flex flex-column z-1\">\r\n                                            {sortedRolesEntries\r\n                                                .map(([role, people = []]): [string, Partial<OrgChartPerson>[], string] => [role, people, formatRole(role)])\r\n                                                .map(([role, people, roleNoSpaces]) => ({\r\n                                                    key: `${level}_${roleNoSpaces}`,\r\n                                                    role,\r\n                                                    roleCount: people.length,\r\n                                                    teamRelsCount: people.filter(p => p.hasTeamInteraction).length,\r\n                                                    hasTeamInteraction: people.some(p => p.hasTeamInteraction),\r\n                                                }))\r\n                                                .map(({ key, role, roleCount, teamRelsCount, hasTeamInteraction }) => (\r\n                                                    <div\r\n                                                        key={`${key}_summary`}\r\n                                                        className={`relative z-1 f6 fw5 ph2 pv1 white-90 nowrap no-user-select pointer ba ${(ignoreTeamInteractions || hasTeamInteraction) ? \"bg-green\" : \"bg-dark-green o-40\"} ${key === cellSelected ? \"b--red\" : \"b--dark-green\"}`}\r\n                                                        onClick={() => navigateToCell(key)}\r\n                                                    >\r\n                                                        <div className=\"z-0 absolute absolute--fill bg-dark-green\" style={{ width: `${teamRelsCount / roleCount * 100}%` }}></div>\r\n                                                        <div className=\"z-1 relative flex justify-between\">\r\n                                                            <span className=\"mr2\">{role}</span>\r\n                                                            <span>{roleCount}</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))}\r\n                                        </span>\r\n                                    </td>\r\n                                    {allRoles\r\n                                        .map(role => [role, formatRole(role)])\r\n                                        .map(([role, roleNoSpaces]) => ({\r\n                                            key: `${level}_${roleNoSpaces}`,\r\n                                            people: roles[role],\r\n                                        }))\r\n                                        .map(({ key, people }) => (\r\n                                            <td\r\n                                                key={key}\r\n                                                className={`relative collapse pa1 v-top ba b--black-10 ${\r\n                                                    !people ? \"bg-near-white\" : \"\"\r\n                                                }`}\r\n                                            >\r\n                                                <div\r\n                                                    className={`flex flex-column relative ba ${\r\n                                                        key === cellSelected ? \"b--red\" : \"b--transparent\"\r\n                                                    }`}\r\n                                                >\r\n                                                    <span id={key} className=\"absolute\" style={{ top: -40 }} />\r\n                                                    {option\r\n                                                        .of(people)\r\n                                                        .map(people => (\r\n                                                            <React.Fragment key={`${key}_wrapper`}>\r\n                                                                <div\r\n                                                                    className={`overflow-y-hidden`}\r\n                                                                    style={{\r\n                                                                        transition: \"max-height 0.3s ease-in-out\",\r\n                                                                        maxHeight: cellOpen[key]\r\n                                                                            ? 51 * people.length\r\n                                                                            : 51 * 4,\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {people.map((p: OrgChartPerson) => {\r\n                                                                        const {\r\n                                                                            uri = \"\",\r\n                                                                            name = \"\",\r\n                                                                            title = \"\",\r\n                                                                            imageUrl = \"\",\r\n                                                                            strength = RelationshipStrength.none,\r\n                                                                            hasTeamInteraction = false,\r\n                                                                        } = p;\r\n                                                                        const flagged = !!flaggedUris[uri];\r\n                                                                        const selectedClass = getPersonId(uri) === cellSelected ? \"ba b--red\" : \"\";\r\n                                                                        const flaggedClass = flagged ? \"bg-nudge-highlight-background\" : \"hover-bg-nudge-light-blue\";\r\n                                                                        const interactedClass = !flagged && (ignoreTeamInteractions || hasTeamInteraction) ? \"\" : \"o-40\";\r\n                                                                        \r\n                                                                        return (\r\n                                                                            <div\r\n                                                                                className={`flex items-center pr1 bg-animate ${selectedClass} ${flaggedClass}`}\r\n                                                                                key={uri}\r\n                                                                                id={getPersonId(uri)}\r\n                                                                                style={{ width: 290, height: 51 }}\r\n                                                                                onClick={showSummary(p)}\r\n                                                                            >\r\n                                                                                <PersonProfile\r\n                                                                                    size={30}\r\n                                                                                    name={name}\r\n                                                                                    title={title}\r\n                                                                                    imageUrl={imageUrl}\r\n                                                                                    className={`pv2 ph1 glow w5 pointer ${interactedClass}`}\r\n                                                                                />\r\n                                                                                {hasTeamInteraction && (\r\n                                                                                    <WiFiIcon\r\n                                                                                        type=\"collab\"\r\n                                                                                        level={strength}\r\n                                                                                    />\r\n                                                                                )}\r\n                                                                            </div>\r\n                                                                        );\r\n                                                                    })}\r\n                                                                </div>\r\n                                                                {people.length > peoplePerCell && (\r\n                                                                    <React.Fragment>\r\n                                                                        <a\r\n                                                                            className={`db tr nudge-blue link pointer f6 ph2`}\r\n                                                                            onClick={() => {\r\n                                                                                setCellOpen((prevOpen: CellOpen): CellOpen => ({\r\n                                                                                    ...prevOpen,\r\n                                                                                    [key]: !prevOpen[key],\r\n                                                                                }));\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            {cellOpen[key] ? \"Less\" : \"More\"}\r\n                                                                        </a>\r\n                                                                        {cellFooter}\r\n                                                                    </React.Fragment>\r\n                                                                )}\r\n                                                            </React.Fragment>\r\n                                                        ))\r\n                                                        .getOrElse(() => null)}\r\n                                                </div>\r\n                                            </td>\r\n                                        ))}\r\n                                </tr>\r\n                            ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}"]}