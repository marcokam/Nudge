{"version":3,"file":"AccountRisk.js","sourceRoot":"","sources":["../../../../Components/Company/AccountRisk/AccountRisk.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\"; // eslint-disable-line @typescript-eslint/no-unused-vars\r\nimport { differenceInCalendarDays } from \"date-fns\";\r\n\r\nimport { values } from \"~/Util/fp/object\";\r\nimport { option } from \"~/Util/fp/Instances/Option\";\r\nimport { apiStates } from \"~/Util/apiUtils\";\r\nimport { isExec, minLevel } from \"~/Data/Person/Relationship/relationshipData\";\r\nimport { getTeamAccountRelationshipSummary, getLastContact } from \"~/Data/Company/accountRiskData\";\r\nimport { jobLevelToOrdering, JobLevel } from \"~/Data/Person/Level/jobLevelData\";\r\nimport { simplePlural } from \"~/Util/nameUtils\";\r\n\r\n\r\nexport function AccountRisk({ apiState = apiStates.none, people = [] }) {\r\n    const accountRisks = useMemo(() => {\r\n        const all = getTeamAccountRelationshipSummary(people);\r\n        const execs = getTeamAccountRelationshipSummary(people.filter(isExec.run));\r\n        const lastContact = getLastContact(people);\r\n        const lastContactDays = option.of(lastContact)\r\n            .map(lastContact => lastContact.lastContact)\r\n            .map(lastContact => lastContact.date)\r\n            .map(date => differenceInCalendarDays(new Date(), date))\r\n            .getOrElse(() => Infinity);\r\n        const execStrong = values(execs.strongRelationships);\r\n        const allStrong = values(all.strongRelationships);\r\n        const strongWithLevel = allStrong.filter(({ person = {} }) => minLevel(jobLevelToOrdering(JobLevel.individual))(person))\r\n        const risks = {\r\n            loaded: apiState === apiStates.fetched && values(all.allRelationships).length > 0,\r\n            strongExecs: {\r\n                show: allStrong.length === strongWithLevel.length,\r\n                color: execStrong.length === 0 ? \"red b--red \" : \"green b--green\",\r\n                text: execStrong.length === 0 ? \"MISSING EXECS\" : `${execStrong.length} STRONG ${simplePlural(execStrong.length, \"EXEC\", \"EXECS\")}`,\r\n            },\r\n            strongAll: {\r\n                show: true,\r\n                color: allStrong.length <= 1 ? \"red b--red\" : \"green b--green\",\r\n                text: allStrong.length === 0 ? \"NO STRONG RELATIONSHIPS\" : allStrong.length === 1 ? \"SINGLE THREADED\" : `${allStrong.length} STRONG RELATIONSHIPS`\r\n            },\r\n            lastContact: {\r\n                show: lastContactDays > 14,\r\n                color: \"red b--red\",\r\n                text: \"SLIPPING\",\r\n            },\r\n            missingExecs: apiState === apiStates.fetched && allStrong.length === strongWithLevel.length && values(execs.strongRelationships).length === 0,\r\n            singleThreaded: apiState === apiStates.fetched && values(all.strongRelationships).length === 1,\r\n            noStrongRelationships: apiState === apiStates.fetched && values(all.strongRelationships).length === 0,\r\n            slipping: apiState === apiStates.fetched && lastContactDays > 14,\r\n        };\r\n        return risks;\r\n    }, [people, apiState]);\r\n    const tagClasses = \"ba br-pill ph2 f7 fw6 no-user-select nowrap\";\r\n\r\n\r\n    return (\r\n        accountRisks.loaded && (\r\n            <div className=\"flex items-center\">\r\n                {accountRisks.strongExecs.show && (\r\n                    <div className=\"mr2\">\r\n                        <span className={`${tagClasses} ${accountRisks.strongExecs.color}`}>{accountRisks.strongExecs.text}</span>\r\n                    </div>  \r\n                )}\r\n                {accountRisks.strongAll.show && (\r\n                    <div className=\"mr2\">\r\n                        <span className={`${tagClasses} ${accountRisks.strongAll.color}`}>{accountRisks.strongAll.text}</span>\r\n                    </div>  \r\n                )}\r\n                {accountRisks.lastContact.show && (\r\n                    <div className=\"mr2\">\r\n                        <span className={`${tagClasses} ${accountRisks.lastContact.color}`}>{accountRisks.lastContact.text}</span>\r\n                    </div>  \r\n                )}\r\n                {/* {accountRisks.missingExecs && (\r\n                    <div className=\"mr2\">\r\n                        <span className={tagClasses}>MISSING EXECS</span>\r\n                    </div>\r\n                )}\r\n                {accountRisks.slipping && (\r\n                    <div className=\"mr2\">\r\n                        <span className={tagClasses}>SLIPPING</span>\r\n                    </div>\r\n                )}\r\n                {accountRisks.singleThreaded && (\r\n                    <div className=\"mr2\">\r\n                        <span className={tagClasses}>SINGLE THREADED</span>\r\n                    </div>\r\n                )}\r\n                {accountRisks.noStrongRelationships && (\r\n                    <div className=\"mr2\">\r\n                        <span className={tagClasses}>NO STRONG RELATIONSHIPS</span>\r\n                    </div>\r\n                )} */}\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\n\r\n"]}