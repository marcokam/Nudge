{"version":3,"file":"TeamInteractions.js","sourceRoot":"","sources":["../../../Components/Team/TeamInteractions.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { format, isSameDay, isSameYear } from \"date-fns\";\r\n\r\nimport { Person, Interactions } from \"~/Data/NudgeInterfaces\";\r\nimport { PersonProfileProps } from \"~/Components/Company/OrgChart/OrgChart\";\r\n\r\nimport { dateCompare } from \"~/Util/sortUtils\";\r\nimport { groupBy } from \"~/Util/fp/array\";\r\nimport { compose } from \"~/Util/fp/function\";\r\nimport { tryCatch } from \"~/Util/fp/Instances/Option\";\r\nimport { Compare } from \"~/Util/fp/Instances/Compare\";\r\n\r\nimport { MeetingIcon } from \"~/Components/Icons/MeetingIcon\";\r\nimport { InboundOutboundIcon, ioTypes } from \"~/Components/Icons/InboundOutboundIcon\";\r\nimport { mapEntries, propOr } from \"~/Util/fp/object\";\r\nimport { toUTCDate } from \"~/Util/dateUtils\";\r\n\r\n\r\ninterface TeamInteractionProps {\r\n    interactions: Interactions;\r\n    PersonProfile: React.FunctionComponent<PersonProfileProps>;\r\n    person: Partial<Person>;\r\n}\r\ninterface Interaction {\r\n    type: string;\r\n    date: string;\r\n    displayDate?: string;\r\n    teammate?: Partial<Person>;\r\n    contact?: Partial<Person>;\r\n};\r\n\r\nconst groupInteractions = (defaultUri: string) => compose(\r\n    (interactions: [string, Interaction[]][]) => interactions\r\n        .sort(Compare.of(dateCompare(false))\r\n            .contramap<[string, Interaction[]]>(([_, is]) => tryCatch(() => is[0].date).getOrElse(() => \"1900-01-01\"))\r\n            .run),\r\n    mapEntries((uri: string, interactions: Interaction[]): [string, Interaction[]] =>\r\n        [uri, interactions.map(i => ({ ...i, displayDate: isSameYear(new Date(), i.date) ? format(i.date, \"MMM D\") : format(i.date, \"MMM D YYYY\")}))]\r\n    ),\r\n    groupBy(({ teammate, contact }: Interaction) => (contact && contact.uri && `${contact.uri}_${teammate && teammate.uri}`) || (teammate && teammate.uri) || defaultUri),\r\n);\r\n\r\nexport const TeamInteractions: React.FunctionComponent<TeamInteractionProps> = ({\r\n    interactions,\r\n    PersonProfile,\r\n    person = {},\r\n}) => {\r\n    const {\r\n        lastInboundTeamMember = {},\r\n        lastInboundPerson = {},\r\n        lastOutboundTeamMember = {},\r\n        lastOutboundPerson = {},\r\n        lastMeetingTeamMember = {},\r\n        lastMeetingPerson = {},\r\n        lastInbound: inbound = \"\",\r\n        lastOutbound: outbound = \"\",\r\n        lastMeeting: meeting = \"\",\r\n    } = interactions;\r\n    const [lastInbound, lastOutbound, lastMeeting] = [inbound, outbound, meeting].map(d => d === \"\" ? \"\" : toUTCDate(d));\r\n\r\n    interface InteractionRecord {\r\n        type: string;\r\n        date: string;\r\n        teammate: Partial<Person>;\r\n        contact: Partial<Person>;\r\n    }\r\n    const sortedInteractions = groupInteractions(person.uri || \"\")(\r\n        [\r\n            ...(isSameDay(lastInbound, lastOutbound) && lastInboundTeamMember.uri === lastOutboundTeamMember.uri\r\n                ? [{ type: \"Conversation\", date: lastInbound, teammate: lastInboundTeamMember.uri ? lastInboundTeamMember : person, contact: lastInboundPerson }]\r\n                : [\r\n                    { type: \"Inbound\", date: lastInbound, teammate: lastInboundTeamMember.uri ? lastInboundTeamMember : person, contact: lastInboundPerson },\r\n                    { type: \"Outbound\", date: lastOutbound, teammate: lastOutboundTeamMember.uri ? lastOutboundTeamMember : person, contact: lastOutboundPerson },\r\n                ]),\r\n            { type: \"Meeting\", date: lastMeeting, teammate: lastMeetingTeamMember, contact: lastMeetingPerson },\r\n        ]\r\n            .filter(({ date }) => Boolean(date))\r\n            .filter(({ teammate, contact }) => !(teammate && contact && (teammate.uri && contact.uri) && (teammate.uri == contact.uri)))\r\n            .sort(Compare.of(dateCompare(false))\r\n                .contramap(propOr(\"date\", \"\"))\r\n                .run)\r\n    );\r\n    const isTeam = lastInboundTeamMember.uri || lastOutboundTeamMember.uri || lastMeetingTeamMember.uri;\r\n\r\n    return (\r\n        (lastInbound || lastOutbound || lastMeeting) ? (\r\n            <section className=\"f6\">\r\n                <h1 className=\"mv1 f5 fw5\">{isTeam ? \"Team \" : \"\"}Interactions</h1>\r\n                <table className=\"collapse center truncate\" cellSpacing=\"0\">\r\n                    <tbody className=\"lh-copy truncate\">\r\n                        {sortedInteractions.map(([uri, interactions]: [string, Interaction[]]) => {\r\n                            const [{ teammate, contact }] = interactions;\r\n                            return (\r\n                                <tr key={uri}>\r\n                                    <td className=\"pr2\">{contact && contact.uri && <PersonProfile\r\n                                        size={30}\r\n                                        className=\"mw5\"\r\n                                        name={contact.name || \"\"}\r\n                                        title={contact.title || \"\"}\r\n                                        imageUrl={contact.imageUrl || \"\"}\r\n                                    />\r\n                                    }</td>\r\n                                    <td className=\"pr2\">{interactions.map(({ type, date, displayDate }) =>\r\n                                        <React.Fragment key={`${type}_${date}`}>\r\n                                            {type === \"Meeting\" && <div className=\"flex items-center\">\r\n                                                <span className=\"f7 nowrap w3 pr2\">{displayDate}</span>\r\n                                                <div className=\"flex justify-center mv1\" title=\"meeting\" style={{ width: 41 }}>\r\n                                                    <MeetingIcon fill=\"#1a9bfc\" style={{ width: \"15px\", height: \"15px\" }} />\r\n                                                </div>\r\n                                            </div>}\r\n                                            {type === \"Conversation\" && <div className=\"flex items-center\">\r\n                                                <span className=\"f7 nowrap w3 pr2\">{displayDate}</span>\r\n                                                <InboundOutboundIcon type={ioTypes.conversation as any} className=\"flex items-center\" />\r\n                                            </div>}\r\n                                            {type === \"Inbound\" && <div className=\"flex items-center\">\r\n                                                <span className=\"f7 nowrap w3 pr2\">{displayDate}</span>\r\n                                                <InboundOutboundIcon type={ioTypes.inboundFlipped as any} className=\"flex items-center\" />\r\n                                            </div>}\r\n                                            {type === \"Outbound\" && <div className=\"flex items-center\">\r\n                                                <span className=\"f7 nowrap w3 pr2\">{displayDate}</span>\r\n                                                <InboundOutboundIcon type={ioTypes.outboundFlipped as any} className=\"flex items-center\" />\r\n                                            </div>}\r\n                                        </React.Fragment>\r\n                                    )}</td>\r\n                                    <td>{teammate && teammate.uri && teammate.uri !== person.uri && <PersonProfile\r\n                                        size={30}\r\n                                        className=\"mw5\"\r\n                                        name={teammate.name || \"\"}\r\n                                        title={teammate.title || \"\"}\r\n                                        imageUrl={teammate.imageUrl || \"\"}\r\n                                    />\r\n                                    }</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        ) : null\r\n    );\r\n};"]}