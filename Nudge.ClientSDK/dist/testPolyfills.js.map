{"version":3,"file":"testPolyfills.js","sourceRoot":"","sources":["../testPolyfills.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AACvC,OAAO,gBAAgB,MAAM,4BAA4B,CAAC;AAC1D,OAAO,eAAe,MAAM,qCAAqC,CAAC;AAClE,OAAO,wBAAwB,MAAM,sDAAsD,CAAC;AAC5F,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAGhD,yCAAyC;AACzC,IAAM,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACzC,MAAc,CAAC,SAA0B,CAAC,GAAG,SAAS,CAAC,OAAkB,CAAC;AAE3E,QAAQ,CAAC,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,EAAE,IAAI,wBAAwB,EAAE,CAAC,CAAC;AACrG,QAAQ,CAAC,0BAA0B,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC","sourcesContent":["import registry from \"./Util/registry\";\r\nimport ComposableLogger from \"./Logging/ComposableLogger\";\r\nimport ConsoleAppender from \"./Logging/Appenders/ConsoleAppender\";\r\nimport FunctionArgumentResolver from \"./Logging/ArgumentResolvers/FunctionArgumentResolver\";\r\nimport { Task } from \"./Util/fp/Instances/Task\";\r\n\r\n\r\n// fetch() polyfill for making API calls.\r\nconst fetchPoly = require(\"whatwg-fetch\");\r\n(global as any)[\"Headers\" as any as number] = fetchPoly.Headers as Headers;\r\n\r\nregistry.logger = new ComposableLogger(new ConsoleAppender(console), new FunctionArgumentResolver());\r\nregistry.applicationServicesBaseUrl = Task.of(\"testBaseUrl\");"]}