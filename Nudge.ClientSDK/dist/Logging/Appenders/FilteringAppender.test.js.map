{"version":3,"file":"FilteringAppender.test.js","sourceRoot":"","sources":["../../../Logging/Appenders/FilteringAppender.test.ts"],"names":[],"mappings":"AAAA,OAAO,iBAAiB,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAyB,MAAM,sBAAsB,CAAC;AACvE,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAElD;IAAA;QAAA,iBAGC;QAFY,WAAM,GAAe,EAAE,CAAC;QACjC,WAAM,GAAG,UAAC,KAAe,IAAO,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,WAAW,CAAC,CAAC,CAAC,CAAA;IAClF,CAAC;IAAD,mBAAC;AAAD,CAAC,AAHD,IAGC;AAED,IAAM,IAAI,GAAG,UAAC,QAAkB,EAAE,YAAwB,EAAE,aAAyB;IACjF,IAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;IACxC,IAAM,iBAAiB,GAAG,IAAI,iBAAiB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAExE,IAAM,UAAU,GAAe,EAAE,CAAC;IAClC,YAAY,CAAC,OAAO,CAAC,UAAA,KAAK;QACtB,IAAM,IAAI,GAAG,CAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,CAAE,CAAC;QAC/C,IAAM,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,cAAM,OAAA,IAAI,EAAJ,CAAI,EAAC,CAAC;QAChD,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAChC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,aAAa,CAAC,OAAO,CAAC,UAAA,KAAK;QACvB,IAAM,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,cAAQ,MAAM,KAAK,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;QACtF,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC,CAAC,CAAA;IACF,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACpD,CAAC,CAAA;AAED,EAAE,CAAC,gBAAgB,EAAE;IACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9F,CAAC,CAAC,CAAC;AACH,EAAE,CAAC,kBAAkB,EAAE;IACnB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC;AACH,EAAE,CAAC,eAAe,EAAE;IAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7F,CAAC,CAAC,CAAC;AACH,EAAE,CAAC,gBAAgB,EAAE;IACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC","sourcesContent":["import FilteringAppender from \"./FilteringAppender\";\r\nimport { LogLevel, LogEvent, LogAppender } from \"../LoggingInterfaces\";\r\nimport uuid from \"uuid\";\r\nimport { voidPromise } from \"~/Util/PromiseUtils\";\r\n\r\nclass MockAppender implements LogAppender {\r\n    readonly events: LogEvent[] = [];\r\n    append = (event: LogEvent) => { this.events.push(event); return voidPromise; }\r\n}\r\n\r\nconst test = (minLevel: LogLevel, loggedLevels: LogLevel[], skippedLevels: LogLevel[]) => {\r\n    const mockAppender = new MockAppender();\r\n    const filteringAppender = new FilteringAppender(minLevel, mockAppender);\r\n\r\n    const shouldHave: LogEvent[] = [];    \r\n    loggedLevels.forEach(level => {\r\n        const args = [ 1, \"hello\", false, {}, uuid() ];\r\n        const event = { level: level, args: () => args};\r\n        filteringAppender.append(event);\r\n        shouldHave.push(event);\r\n    });\r\n\r\n    skippedLevels.forEach(level => {\r\n        const event = { level: level, args: () => { throw Error(\"This should not happen\"); }};\r\n        filteringAppender.append(event);\r\n    })\r\n    expect(mockAppender.events).toEqual(shouldHave);    \r\n}\r\n\r\nit(\"minLevel error\", () => {\r\n    test(LogLevel.error, [LogLevel.error], [LogLevel.warning, LogLevel.info, LogLevel.debug]);    \r\n});\r\nit(\"minLevel warning\", () => {\r\n    test(LogLevel.warning, [LogLevel.error, LogLevel.warning], [LogLevel.info, LogLevel.debug]);    \r\n});\r\nit(\"minLevel info\", () => {\r\n    test(LogLevel.info, [LogLevel.error, LogLevel.warning, LogLevel.info], [LogLevel.debug]);    \r\n});\r\nit(\"minLevel debug\", () => {\r\n    test(LogLevel.debug, [LogLevel.error, LogLevel.warning, LogLevel.info, LogLevel.debug], []);    \r\n});"]}