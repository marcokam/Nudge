{"version":3,"file":"LogWindowEvents.js","sourceRoot":"","sources":["../../Logging/LogWindowEvents.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAEvC,SAAS,aAAa,CAAC,UAAsB;IACzC,IAAI;QACO,IAAA,4BAAO,EAAE,wBAAK,CAAe;QACpC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACzC;IAAC,OAAM,CAAC,EAAE;QACP,wEAAwE;KAC3E;AACL,CAAC;AAED,SAAS,wBAAwB,CAAC,qBAA4C;IAC1E,IAAI;QACO,IAAA,qCAAM,CAA0B;QAChC,IAAA,wBAAO,CAAW;QACzB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KAC1C;IAAC,OAAM,CAAC,EAAE;QACP,wEAAwE;KAC3E;AACL,CAAC;AAED,MAAM,CAAC,IAAM,qBAAqB,GAAG,cAAM,OAAA,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,EAA/C,CAA+C,CAAC;AAC3F,MAAM,CAAC,IAAM,kCAAkC,GAAG,cAAM,OAAA,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,wBAAwB,CAAC,EAAvE,CAAuE,CAAC","sourcesContent":["import registry from \"~/Util/registry\";\r\n\r\nfunction logErrorEvent(errorEvent: ErrorEvent) {\r\n    try {\r\n        const {message, error} = errorEvent;\r\n        registry.logger.error(message, error);\r\n    } catch(e) {\r\n        // Don't throw exceptions in logger since it turns into an infinite loop\r\n    }\r\n}\r\n\r\nfunction logPromiseRejectionEvent(promiseRejectionEvent: PromiseRejectionEvent){\r\n    try {\r\n        const {reason} = promiseRejectionEvent;\r\n        const {message} = reason;\r\n        registry.logger.error(message, reason);\r\n    } catch(e) {\r\n        // Don't throw exceptions in logger since it turns into an infinite loop\r\n    }\r\n}\r\n\r\nexport const setupWindowErrorEvent = () => window.addEventListener(\"error\", logErrorEvent);\r\nexport const setupWindowUnhandledRejectionEvent = () => window.addEventListener(\"unhandledrejection\", logPromiseRejectionEvent);\r\n"]}