{"version":3,"file":"StringUtils.js","sourceRoot":"","sources":["../../Util/StringUtils.ts"],"names":[],"mappings":"AAAA,IAAM,iBAAiB,GAAG,cAAc,CAAC;AACzC,IAAM,2BAA2B,GAAG,gBAAgB,CAAC;AACrD,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,GAAW,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAA9B,CAA8B,CAAC;AAC9E,MAAM,CAAC,IAAM,wBAAwB,GAAG,UAAC,GAAW,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,2BAA2B,CAAC,EAAxC,CAAwC,CAAC;AAElG,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,QAAgB,EAAE,UAAe,IAAK,OAAA,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,UAAU,CAAC,CAAC,CAAC,EAAb,CAAa,CAAC,EAAvD,CAAuD,CAAC;AAC3H,MAAM,CAAC,IAAM,gBAAgB,GAAG,UAAC,GAAW,EAAE,MAAc,IAAa,OAAA,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAxB,CAAwB,CAAC","sourcesContent":["const alphaNumericRegex = /^[a-z0-9]+$/i;\r\nconst alphaNumericUnderscoreRegex = /^[a-z0-9\\_]+$/i;\r\nexport const isAlphaNumeric = (str: string) => !!str.match(alphaNumericRegex);\r\nexport const isAlphaNumericUnderscore = (str: string) => !!str.match(alphaNumericUnderscoreRegex);\r\n\r\nexport const fromTemplate = (template: string, parameters: any) => template.replace(/\\${(.*?)}/g, (_, g) => parameters[g]);\r\nexport const prefixIfNotEmpty = (str: string, prefix: string): string => str ? prefix + str : str;"]}