{"version":3,"file":"nameUtils.js","sourceRoot":"","sources":["../../Util/nameUtils.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AACH,MAAM,UAAU,cAAc,CAAC,IAAS;IAAT,qBAAA,EAAA,SAAS;IACpC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5B,IAAM,KAAK,GAAG,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;IAChC,IAAM,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;IAC7B,OAAO,CAAA,KAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAG,CAAA,CAAC,WAAW,EAAE,CAAC;AAC/D,CAAC;AAED;;;;;;;;GAQG;AACH,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,KAAa,EAAE,IAAY,EAAE,WAAoB;IAC1E,OAAA,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAI,IAAI,MAAG,CAAC,CAAC,CAAC,IAAI,CAAC;AAA1E,CAA0E,CAAC;AAE/E,MAAM,CAAC,IAAM,YAAY,GAAG,UAAC,IAAS,EAAE,MAAW;IAAtB,qBAAA,EAAA,SAAS;IAAE,uBAAA,EAAA,WAAW;IAC/C,OAAA,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,QAAK,CAAC;AAA9D,CAA8D,CAAC","sourcesContent":["/**\r\n * Convert a proper name to it's corresponding 2 letter initials\r\n * \te.x John Doe -> JD\r\n * @param  {string} name Full name (first and last name)\r\n * @return {string}      Initials\r\n */\r\nexport function nameToInitials(name = \"\") {\r\n    const arr = name.split(\" \");\r\n    const first = arr.shift() || \"\";\r\n    const last = arr.pop() || \"\";\r\n    return `${first.charAt(0)}${last.charAt(0)}`.toUpperCase();\r\n}\r\n\r\n/**\r\n * Simple pluralizer\r\n *   Defaults to adding an `s` at the end\r\n *   Can use the optional replacement to change the pluralized word\r\n * @param {number} value Value to check if word should be pluralized\r\n * @param {string} word Word to pluralize\r\n * @param {string} [replacement] Optional replacement pluralized word\r\n * @return {string} Pluralized word\r\n */\r\nexport const simplePlural = (value: number, word: string, replacement?: string) =>\r\n    (value === 0 || value > 1 ? replacement ? replacement : `${word}s` : word);\r\n\r\nexport const truncateName = (name = \"\", length = 30) =>\r\n    (name.length <= length ? name : `${name.slice(0, length)}...`);"]}