{"version":3,"file":"Option.test.js","sourceRoot":"","sources":["../../../../Util/fp/Instances/Option.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { some, none, tryCatch } from \"./Option\";\r\nimport { id, compose } from \"../function\";\r\nimport { List, list } from \"./List\";\r\nimport { task, Task } from \"./Task\";\r\n\r\nconst inc = (x: number) => x + 1;\r\nconst double = (x: number) => x * 2;\r\nconst mult = (x: number) => (y: number) => x * y;\r\nconst exclaim = (x: number | string) => x + \"!!\";\r\nconst d = \"default\";\r\n\r\n\r\ndescribe(\"Option\", () => {\r\n    it(\"obeys the Functor laws\", () => {\r\n        /**\r\n         * 1. Identity: `F.map(id) = F`\r\n         * 2. Composition: `F.map(compose(bc, ab)) == F.map(ab).map(bc)`\r\n         */\r\n        const o = some(1);\r\n        const law1 = o.map(id).getOrElse(() => NaN) === o.getOrElse(() => NaN);\r\n        const law2 = o.map(compose(exclaim, inc)).getOrElse(() => \"\") === o.map(inc).map(exclaim).getOrElse(() => \"\");\r\n        \r\n        expect(law1).toBe(true);\r\n        expect(law2).toBe(true);\r\n    });\r\n\r\n    it(\"can get value when not null or undefined\", () => {\r\n        const arr = [1];\r\n        const obj = { 1: 1 };\r\n        const sym = Symbol();\r\n\r\n        expect(some(1).getOrElse(() => NaN)).toEqual(1);\r\n        expect(some(\"1\").getOrElse(() => \"\")).toEqual(\"1\");\r\n        expect(some(true).getOrElse(() => false)).toEqual(true);\r\n        expect(some(arr).getOrElse(() => [])).toEqual(arr);\r\n        expect(some(obj).getOrElse(() => {})).toEqual(obj);\r\n        expect(some(sym).getOrElse(() => undefined)).toEqual(sym);\r\n    });\r\n\r\n    it(\"always returns the same `none`\", () => {\r\n        const n1 = none;\r\n        const n2 = n1.map(inc);\r\n        const n3 = n2.ap(none);\r\n        const n4 = n3.chain(() => none);\r\n        const n5 = tryCatch(() => undefined);\r\n        const n6 = tryCatch(() => JSON.parse(\"?@*#!(%InvalidJSON?s9d8fsdf\"));\r\n\r\n        expect(n1 === none).toBe(true);\r\n        expect(n1).toBe(n2);\r\n        expect(n2).toBe(n3);\r\n        expect(n3).toBe(n4);\r\n        expect(n4).toBe(n5);\r\n        expect(n5).toBe(n6);\r\n    });\r\n\r\n    it(\"returns a default value when null or undefined\", () => {\r\n        expect(none.getOrElse(() => d)).toEqual(d);\r\n        expect(none.getOrElse(() => d)).toEqual(d);\r\n    });\r\n\r\n    it(\"can map when value exists\", () => {\r\n        const o = some(1)\r\n            .map(inc)\r\n            .map(double)\r\n            .map(exclaim)\r\n            .getOrElse(() => d);\r\n\r\n        expect(o).toEqual(\"4!!\");\r\n    });\r\n\r\n    it(\"can map when null or undefined\", () => {\r\n        const o1 = none\r\n            .map(x => x ? true : false)\r\n            .map(b => b ? 1 : 0)\r\n            .getOrElse(() => d);\r\n        const o2 = none\r\n            .map(x => x ? true : false)\r\n            .map(b => b ? 1 : 0)\r\n            .getOrElse(() => d);\r\n\r\n        expect(o1).toEqual(d);\r\n        expect(o2).toEqual(d);\r\n    });\r\n\r\n    it(\"throws if any map operation fails\", () => {\r\n        const obj: { [key: string]: any } = { test: 123 };\r\n        const o = some(obj);\r\n        const r2 = o\r\n            .map(x => x.doesnotexist)\r\n            .getOrElse(() => d);\r\n\r\n        expect(() => o.map(x => x.doesnotexist.doesnotexist)).toThrow();\r\n        expect(r2).toEqual(d);\r\n    });\r\n\r\n    it(\"can apply a function in another Option\", () => {\r\n        const o = some(1);\r\n        const oinc = some(inc);\r\n        expect(oinc.ap(o).getOrElse(() => NaN)).toEqual(2);\r\n    });\r\n\r\n    it(\"can apply a curried function with multiple parameters\", () => {\r\n        const o1 = some(2);\r\n        const o2 = some(3);\r\n        const omult = some(mult);\r\n        expect(omult.ap(o1).ap(o2).getOrElse(() => NaN)).toEqual(6);\r\n    });\r\n\r\n    it(\"throws any ap operation fails\", () => {\r\n        const notExistProp = (o: { [key: string]: any }) => o.doesnotexist;\r\n        const failProp = (o: { [key: string]: any }) => o.doesnotexist.doesnotexist;\r\n        \r\n        expect(some(notExistProp).ap(some({})).getOrElse(() => d)).toBe(d);\r\n        expect(() => some(failProp).ap(some({})).getOrElse(() => d)).toThrow();\r\n        expect(some(notExistProp).ap(none).getOrElse(() => d)).toBe(d);\r\n    });\r\n\r\n    it(\"can apply if function or args are none\", () => {\r\n        expect(some(mult).ap(none).ap(some(2)).getOrElse(() => d)).toBe(d);\r\n        expect(none.ap(some(2)).ap(none).getOrElse(() => d)).toBe(d);\r\n    });\r\n\r\n    it(\"can chain nested Options into a single one\", () => {\r\n        const o = some(1);\r\n        const unnested = o.chain(x => tryCatch(() => exclaim(x)));\r\n        expect(unnested.getOrElse(() => \"\")).toBe(\"1!!\");\r\n    });\r\n\r\n    it(\"can traverse applicatives\", async () => {\r\n        const listOfOptions = some(1)\r\n            .traverse1<\"List\", number>(list, n => List.of(n + 1, n + 2, n + 3))\r\n        expect(listOfOptions.map(o => o.getOrElse(() => 0)).toArray()).toEqual([2, 3, 4]);\r\n\r\n        const taskOfOption = some(1)\r\n            .traverse2<\"Task\", Error, number>(task, n => Task.of(n + 1));\r\n        const result = await taskOfOption.fork(id, o => o.getOrElse(() => 0));\r\n        expect(result).toEqual(2);\r\n\r\n        const listOfNone = none\r\n            .traverse1<\"List\", number>(list, (n: number) => List.of(n + 1, n + 2, n + 3));\r\n        expect(listOfNone.map(o => o.getOrElse(() => 0)).toArray()).toEqual([0]);\r\n\r\n        const taskOfNone = none\r\n            .traverse2<\"Task\", Error, number>(task, (n: number) => Task.of(n + 1)); \r\n        const result2 = await taskOfNone.fork(id, o => o.getOrElse(() => 0));\r\n        expect(result2).toEqual(0);\r\n    });\r\n});\r\n\r\ndescribe(\"tryCatch\", () => {\r\n    it(\"returns an Option on success\", () => {\r\n        const o = tryCatch(() => JSON.parse(`{\"foo\":\"bar\"}`));\r\n\r\n        expect(o.map(x => x.foo).map(exclaim).getOrElse(() => \"\")).toEqual(\"bar!!\");\r\n    });\r\n\r\n    it(\"returns an Option on error\", () => {\r\n        const o = tryCatch(() => JSON.parse(\"?@*#!(%InvalidJSON?s9d8fsdf\"));\r\n\r\n        expect(o.getOrElse(() => d)).toEqual(d);\r\n    });\r\n\r\n    it(\"returns an Option when null or undefined\", () => {\r\n        const o1 = tryCatch(() => null);\r\n        const o2 = tryCatch(() => undefined);\r\n        const parms: { [key: string]: any } = { port: 8888 };\r\n        const o3 = tryCatch(() => parms.doesnotexist);\r\n\r\n        expect(o1.getOrElse(() => d)).toEqual(d);\r\n        expect(o2.getOrElse(() => d)).toEqual(d);\r\n        expect(o3.getOrElse(() => d)).toEqual(d);\r\n    });\r\n\r\n    it(\"returns an Option when not null or undefined\", () => {\r\n        const o1 = tryCatch(() => 1);\r\n\r\n        expect(o1.map(inc).map(double).map(exclaim).getOrElse(() => \"\")).toEqual(\"4!!\");\r\n    });\r\n});\r\n\r\n"]}