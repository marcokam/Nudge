{"version":3,"file":"List.js","sourceRoot":"","sources":["../../../../Util/fp/Instances/List.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAKA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,UAAU,CAAC;AACrF,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,MAAM,CAAC,IAAM,GAAG,GAAG,MAAM,CAAC;AAM1B;IAOI,cAAY,CAAM;QAAlB,iBAEC;QARQ,QAAG,GAAW,MAAM,CAAC;QAUrB,QAAG,GAAG,UAAI,CAAc,IAAc,OAAA,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAA3B,CAA2B,CAAC;QAClE,OAAE,GAAG,UAAI,KAAc;YAC5B,OAAA,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK;iBACvB,GAAG,CAAC,UAAA,CAAC,IAAI,OAAC,KAAI,CAAC,KAA4C;iBACvD,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,EAAJ,CAAI,CAAC,EADT,CACS,CAAC,CAAC,CAAC;QAF1B,CAE0B,CAAA;QACrB,UAAK,GAAG,UAAI,CAAoB;YACrC,OAAA,IAAI,IAAI,CAAC,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAV,CAAU,CAAC,CAAC,CAAC;QAAlD,CAAkD,CAAC;QAC9C,WAAM,GAAG,UAAC,CAAoB;YACnC,OAAA,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAA9B,CAA8B,CAAC;QAC1B,WAAM,GAAG,UAAC,KAAc,IAAc,OAAA,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAxC,CAAwC,CAAC;QAC/E,SAAI,GAAG,UAAI,CAAsB,EAAE,IAAO,IAAQ,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,EAA1B,CAA0B,CAAC;QAC7E,cAAS,GAAG,UAAoB,CAAkB,EAAE,CAAuB;YAChF,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,EAAE,CAC9B,CAAC,CAAC,GAAG,CAAC,UAAC,KAAc,IAAK,OAAA,UAAC,CAAI,IAAK,OAAA,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,EAAlC,CAAkC,CAAC,CAAC,GAAG,CAAC,CAAC,CACtE,CAAC,CAAC,CAAC,CAAC,CAAC,EAFwB,CAExB,EAAE,CAAC,CAAC,EAAE,CAAU,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAFpC,CAEoC,CAAC;QAChC,cAAS,GAAG,UAAwB,CAAkB,EAAE,CAA2B;YACxF,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,EAAE,CAC9B,CAAC,CAAC,GAAG,CAAgC,UAAC,KAAc,IAAK,OAAA,UAAC,CAAI,IAAK,OAAA,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAxB,CAAwB,EAAlC,CAAkC,CAAC,CAAC,GAAG,CAAC,CAAC,CACrG,CAAC,CAAC,CAAC,CAAC,CAAC,EAFwB,CAExB,EAAE,CAAC,CAAC,EAAE,CAAa,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAFvC,CAEuC,CAAC;QAEnC,YAAO,GAAG,cAAM,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC;QAC3B,YAAO,GAAG,cAAM,OAAA,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC;QACpC,WAAM,GAAG,cAAM,OAAA,KAAI,CAAC,KAAK,CAAC,MAAM,EAAjB,CAAiB,CAAC;QACjC,YAAO,GAAG,cAAM,OAAA,IAAI,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAA9B,CAA8B,CAAC;QAC/C,YAAO,GAAG,UAAC,CAAmB,IAAK,OAAA,OAAO,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC;QAC1D,SAAI,GAAG,cAAM,OAAA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,EAA1B,CAA0B,CAAC;QACxC,WAAM,GAAG,UAAI,CAAc,IAAK,OAAA,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,EAA/B,CAA+B,CAAC;QAChE,YAAO,GAAG,cAAM,OAAA,OAAO,CAAC,KAAI,CAAC,KAAK,CAAC,EAAnB,CAAmB,CAAC;QACpC,YAAO,GAAG,UAAC,CAAe,IAAK,OAAA,OAAO,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,EAAtB,CAAsB,CAAC;QACtD,YAAO,GAAG,cAAM,OAAA,MAAM,CAAC,EAAE,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAArE,CAAqE,CAAC;QAhC3F,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnB,CAAC;IANM,OAAE,GAAG;QAAI,WAAS;aAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;YAAT,sBAAS;;QAAc,OAAA,IAAI,IAAI,CAAC,CAAC,CAAC;IAAX,CAAW,CAAC;IAC5C,UAAK,GAAG,cAAS,OAAA,IAAI,IAAI,CAAC,EAAE,CAAuB,EAAlC,CAAkC,CAAC;IACpD,cAAS,GAAG,UAAI,CAAM,IAAc,OAAA,IAAI,CAAC,EAAE,OAAP,IAAI,WAAO,CAAC,IAAZ,CAAa,CAAC;IAoC7D,WAAC;CAAA,AAzCD,IAyCC;SAzCY,IAAI;AA2CjB,MAAM,CAAC,IAAM,GAAG,GAAG,UAAO,CAAc,IAAK,OAAA,UAAC,KAAc,IAAK,OAAA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAZ,CAAY,EAAhC,CAAgC,CAAC;AAC9E,MAAM,CAAC,IAAM,EAAE,GAAG,UAAO,QAA2B,IAAK,OAAA,UAAC,KAAc,IAAc,OAAA,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAA/C,CAA+C,CAAC;AACzG,MAAM,CAAC,IAAM,KAAK,GAAG,UAAO,CAAoB,IAAK,OAAA,UAAC,KAAc,IAAK,OAAA,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAd,CAAc,EAAlC,CAAkC,CAAC;AACxF,MAAM,CAAC,IAAM,EAAE,GAAG;IAAI,WAAS;SAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;QAAT,sBAAS;;IAAK,OAAA,IAAI,CAAC,EAAE,OAAP,IAAI,WAAU,CAAC;AAAf,CAAgB,CAAC;AACrD,MAAM,CAAC,IAAM,MAAM,GAAG,UAAI,MAAe,IAAK,OAAA,UAAC,MAAe,IAAK,OAAA,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,EAArB,CAAqB,EAA1C,CAA0C,CAAC;AACzF,MAAM,CAAC,IAAM,KAAK,GAAG,cAAS,OAAA,IAAI,CAAC,KAAK,EAAK,EAAf,CAAe,CAAC;AAC9C,MAAM,CAAC,IAAM,IAAI,GAA+B;IAC5C,GAAG,KAAA;IACH,EAAE,IAAA;IACF,KAAK,OAAA;IACL,EAAE,IAAA;IACF,KAAK,OAAA;IACL,MAAM,QAAA;CACT,CAAC","sourcesContent":["import { URIS, URIS2, Type, Type2 } from \"../HKT\";\r\nimport { Monad1 }from \"../Algebras/Monad\";\r\nimport { Monoid1 } from \"../Algebras/Monoid\";\r\nimport { Applicative1, Applicative2 } from \"../Algebras/Applicative\";\r\nimport { Predicate } from \"../function\";\r\nimport { uniq, uniqBy, isEmpty, optHead, optFind, flatten, groupBy } from \"../array\";\r\nimport { option } from \"./Option\";\r\n\r\nexport const URI = \"List\";\r\nexport type URI = typeof URI;\r\n\r\ntype Return<A> = A extends (...args: any[]) => infer R ? R : never;\r\n\r\n\r\nexport class List<A> {\r\n    readonly tag: \"List\" = \"List\";\r\n    private readonly value: A[];\r\n    static of = <A>(...a: A[]): List<A> => new List(a);\r\n    static empty = <A>() => new List([]) as unknown as List<A>;\r\n    static fromArray = <A>(a: A[]): List<A> => List.of(...a);\r\n    \r\n    constructor(a: A[]) {\r\n        this.value = a;\r\n    }\r\n    \r\n    readonly map = <B>(f: (a: A) => B): List<B> => new List(this.value.map(f));\r\n    readonly ap = <B>(ListB: List<B>): List<Return<A>> =>\r\n        new List(flatten(ListB.value\r\n            .map(b => (this.value as unknown as ((b: B) => Return<A>)[])\r\n                .map(f => f(b)))))\r\n    readonly chain = <B>(f: (a: A) => List<B>): List<B> =>\r\n        new List(flatten(this.value.map(a => f(a).value)));\r\n    readonly filter = (p: (a: A) => boolean): List<A> =>\r\n        new List(this.value.filter(p));\r\n    readonly concat = (listA: List<A>): List<A> => new List(this.value.concat(listA.value));\r\n    readonly fold = <B>(f: (acc: B, a: A) => B, seed: B): B => this.value.reduce(f, seed);\r\n    readonly traverse1 = <F extends URIS, B>(F: Applicative1<F>, f: (a: A) => Type<F, B>) =>\r\n        this.value.reduce((acc, a) => F.ap(\r\n            F.map((listB: List<B>) => (b: B) => listB.concat(List.of(b)))(acc))\r\n        (f(a)), F.of<List<B>>(List.empty()));\r\n    readonly traverse2 = <F extends URIS2, E, B>(F: Applicative2<F>, f: (a: A) => Type2<F, E, B>) =>\r\n        this.value.reduce((acc, a) => F.ap(\r\n            F.map<E, List<B>, (b: B) => List<B>>((listB: List<B>) => (b: B) => listB.concat(List.of(b)))(acc))\r\n        (f(a)), F.of<E, List<B>>(List.empty()));\r\n    \r\n    readonly toArray = () => this.value;\r\n    readonly isEmpty = () => isEmpty(this.value);\r\n    readonly length = () => this.value.length;\r\n    readonly reverse = () => new List(this.value.reverse());\r\n    readonly groupBy = (f: (a: A) => string) => groupBy(f)(this.value);\r\n    readonly uniq = () => new List(uniq(this.value));\r\n    readonly uniqBy = <B>(f: (a: A) => B) => new List(uniqBy(f)(this.value));\r\n    readonly optHead = () => optHead(this.value);\r\n    readonly optFind = (f: Predicate<A>) => optFind(f)(this.value);\r\n    readonly optLast = () => option.of(this.value.length > 0 && this.value[this.value.length - 1]);\r\n}\r\n\r\nexport const map = <A, B>(f: (a: A) => B) => (listA: List<A>) => listA.map(f);\r\nexport const ap = <A, B>(listAtoB: List<(a: A) => B>) => (listA: List<A>): List<B> => listAtoB.ap(listA);\r\nexport const chain = <A, B>(f: (a: A) => List<B>) => (listA: List<A>) => listA.chain(f);\r\nexport const of = <A>(...a: A[]) => List.of<A>(...a);\r\nexport const concat = <A>(listA1: List<A>) => (listA2: List<A>) => listA1.concat(listA2);\r\nexport const empty = <A>() => List.empty<A>();\r\nexport const list: Monad1<URI> & Monoid1<URI> = {\r\n    map,\r\n    ap,\r\n    chain,\r\n    of,\r\n    empty,\r\n    concat,\r\n};\r\n\r\n"]}