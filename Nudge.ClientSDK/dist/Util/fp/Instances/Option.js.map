{"version":3,"file":"Option.js","sourceRoot":"","sources":["../../../../Util/fp/Instances/Option.ts"],"names":[],"mappings":"AAAA,OAAO,EAAQ,SAAS,EAAE,MAAM,aAAa,CAAC;AAK9C,MAAM,CAAC,IAAM,GAAG,GAAG,QAAQ,CAAC;AAM5B;IAAA;QAAA,iBAUC;QAToB,QAAG,GAAW,MAAM,CAAC;QAC7B,QAAG,GAAG,UAAI,CAAc,IAAgB,OAAA,KAAgC,EAAhC,CAAgC,CAAC,CAAc,wDAAwD;QAC/I,OAAE,GAAG,UAAI,EAAa,IAAwB,OAAA,KAAgC,EAAhC,CAAgC,CAAC,CAAQ,wDAAwD;QAC/I,UAAK,GAAG,UAAI,CAAsB,IAAgB,OAAA,KAAgC,EAAhC,CAAgC,CAAC,CAAI,wDAAwD;QAC/I,cAAS,GAAG,UAAoB,CAAkB,EAAE,CAAuB;YAChF,OAAA,CAAC,CAAC,EAAE,CAAC,KAAI,CAAkC;QAA3C,CAA2C,CAAC;QACvC,cAAS,GAAG,UAAwB,CAAkB,EAAE,CAA2B;YACxF,OAAA,CAAC,CAAC,EAAE,CAAC,KAAI,CAAsC;QAA/C,CAA+C,CAAC;QAC3C,cAAS,GAAG,UAAI,CAAU,IAAY,OAAA,CAAC,EAAE,EAAH,CAAG,CAAC;IACvD,CAAC;IAAD,WAAC;AAAD,CAAC,AAVD,IAUC;;AACD,MAAM,CAAC,IAAM,IAAI,GAAkB,IAAI,IAAI,EAAE,CAAC;AAC9C;IAGI,cAAY,KAAQ;QAApB,iBAEC;QAJgB,QAAG,GAAW,MAAM,CAAC;QAK7B,QAAG,GAAG,UAAI,CAAc,IAAgB,OAAA,SAAS,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAyB,CAAC,CAAC,CAAC,IAAI,EAAjF,CAAiF,CAAC;QAC1H,OAAE,GAAG,UAAI,EAAa,IAAK,OAAA,EAAE,CAAC,GAAG,CAAE,KAAI,CAAC,KAAwC,CAAC,EAAtD,CAAsD,CAAC;QAClF,UAAK,GAAG,UAAI,CAAsB,IAAK,OAAA,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC;QACrD,cAAS,GAAG,UAAoB,CAAkB,EAAE,CAAuB;YAChF,OAAA,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,UAAC,CAAI,IAAK,OAAA,IAAI,IAAI,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAkC;QAAjF,CAAiF,CAAA;QAC5E,cAAS,GAAG,UAAwB,CAAkB,EAAE,CAA2B;YACxF,OAAA,CAAC,CAAC,EAAE,CAAgB,CAAC,CAAC,EAAE,CAAC,UAAC,CAAI,IAAK,OAAA,IAAI,IAAI,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAsC;QAApG,CAAoG,CAAA;QAC/F,cAAS,GAAG,UAAI,CAAU,IAAY,OAAA,KAAI,CAAC,KAAK,EAAV,CAAU,CAAC,CAAsC,wDAAwD;QATpJ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IASL,WAAC;AAAD,CAAC,AAdD,IAcC;;AACD,MAAM,CAAC,IAAM,IAAI,GAAG,UAAI,CAAI,IAAK,OAAA,IAAI,IAAI,CAAC,CAAC,CAAC,EAAX,CAAW,CAAC;AAI7C,MAAM,CAAC,IAAM,GAAG,GAAG,UAAO,CAAc,IAAK,OAAA,UAAC,EAAa,IAAK,OAAA,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAT,CAAS,EAA5B,CAA4B,CAAC;AAC1E,MAAM,CAAC,IAAM,EAAE,GAAG,UAAO,GAAwB,IAAK,OAAA,UAAC,EAAa,IAAK,OAAA,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAV,CAAU,EAA7B,CAA6B,CAAC;AACpF,MAAM,CAAC,IAAM,KAAK,GAAG,UAAO,CAAsB,IAAK,OAAA,UAAC,EAAa,IAAK,OAAA,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAX,CAAW,EAA9B,CAA8B,CAAC;AACtF,MAAM,CAAC,IAAM,EAAE,GAAG,UAAI,CAAI,IAAgB,OAAA,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAA7B,CAA6B,CAAC;AACxE,MAAM,CAAC,IAAM,MAAM,GAAgB;IAC/B,GAAG,KAAA;IACH,EAAE,IAAA;IACF,KAAK,OAAA;IACL,EAAE,IAAA;CACL,CAAC;AAEF,MAAM,CAAC,IAAM,QAAQ,GAAG,UAAI,CAAU;IAClC,IAAI;QACA,OAAO,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KACzB;IAAC,OAAO,GAAG,EAAE;QACV,OAAO,IAAI,CAAC;KACf;AACL,CAAC,CAAA","sourcesContent":["import { Lazy, isNotNull } from \"../function\";\r\nimport { Monad1 } from \"../Algebras/Monad\";\r\nimport { URIS, Type, URIS2, Type2 } from \"../HKT\";\r\nimport { Applicative1, Applicative2 } from \"../Algebras/Applicative\";\r\n\r\nexport const URI = \"Option\";\r\nexport type URI = typeof URI;\r\n\r\ntype Return<A> = A extends (...args: any[]) => infer R ? R : never;\r\n\r\n\r\nexport class None<A> {\r\n    private readonly tag: \"None\" = \"None\";\r\n    readonly map = <B>(f: (a: A) => B): Option<B> => this as unknown as Option<never>;              // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    readonly ap = <B>(Ob: Option<B>): Option<Return<A>> => this as unknown as Option<never>;        // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    readonly chain = <B>(f: (a: A) => Option<B>): Option<B> => this as unknown as Option<never>;    // eslint-disable-line @typescript-eslint/no-unused-vars\r\n    readonly traverse1 = <F extends URIS, B>(F: Applicative1<F>, f: (a: A) => Type<F, B>): Type<F, Option<B>> => // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        F.of(this) as unknown as Type<F, Option<B>>;\r\n    readonly traverse2 = <F extends URIS2, E, B>(F: Applicative2<F>, f: (a: A) => Type2<F, E, B>): Type2<F, E, Option<B>> => // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        F.of(this) as unknown as Type2<F, E, Option<B>>;\r\n    readonly getOrElse = <D>(f: Lazy<D>): A | D => f();\r\n}\r\nexport const none: Option<never> = new None();\r\nexport class Some<A> {\r\n    private readonly tag: \"Some\" = \"Some\";\r\n    private readonly value: A\r\n    constructor(value: A) {\r\n        this.value = value;\r\n    }\r\n    readonly map = <B>(f: (a: A) => B): Option<B> => isNotNull(f(this.value)) ? new Some(f(this.value)) as Some<NonNullable<B>> : none;\r\n    readonly ap = <B>(Ob: Option<B>) => Ob.map((this.value as unknown as (b: B) => Return<A>));\r\n    readonly chain = <B>(f: (a: A) => Option<B>) => f(this.value);\r\n    readonly traverse1 = <F extends URIS, B>(F: Applicative1<F>, f: (a: A) => Type<F, B>): Type<F, Option<B>> =>\r\n        F.ap(F.of((b: B) => new Some(b)))(f(this.value)) as unknown as Type<F, Option<B>>\r\n    readonly traverse2 = <F extends URIS2, E, B>(F: Applicative2<F>, f: (a: A) => Type2<F, E, B>): Type2<F, E, Option<B>> =>\r\n        F.ap<E, B, Some<B>>(F.of((b: B) => new Some(b)))(f(this.value)) as unknown as Type2<F, E, Option<B>>\r\n    readonly getOrElse = <D>(f: Lazy<D>): A | D => this.value;                                      // eslint-disable-line @typescript-eslint/no-unused-vars\r\n}\r\nexport const some = <A>(a: A) => new Some(a);\r\nexport type Option<A> =  Some<NonNullable<A>> | None<NonNullable<A>>;\r\n\r\n\r\nexport const map = <A, B>(f: (a: A) => B) => (Oa: Option<A>) => Oa.map(f);\r\nexport const ap = <A, B>(Oab: Option<(a: A) => B>) => (Oa: Option<A>) => Oab.ap(Oa);\r\nexport const chain = <A, B>(f: (a: A) => Option<B>) => (Oa: Option<A>) => Oa.chain(f);\r\nexport const of = <A>(a: A): Option<A> => isNotNull(a) ? some(a) : none;\r\nexport const option: Monad1<URI> = {\r\n    map,\r\n    ap,\r\n    chain,\r\n    of,\r\n};\r\n\r\nexport const tryCatch = <A>(f: Lazy<A>) => {\r\n    try {\r\n        return option.of(f());\r\n    } catch (err) {\r\n        return none;\r\n    }\r\n}\r\n"]}