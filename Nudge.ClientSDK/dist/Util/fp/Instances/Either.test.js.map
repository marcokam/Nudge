{"version":3,"file":"Either.test.js","sourceRoot":"","sources":["../../../../Util/fp/Instances/Either.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { left, right, tryCatch } from \"./Either\";\r\nimport { id, compose } from \"../function\";\r\n\r\nconst inc = (x: number) => x + 1;\r\nconst double = (x: number) => x * 2;\r\nconst mult = (x: number) => (y: number) => x * y;\r\nconst exclaim = (x: number | string) => x + \"!!\";\r\nconst e = new Error(\"nothing\");\r\n\r\n\r\ndescribe(\"Either\", () => {\r\n    it(\"obeys the Functor laws\", () => {\r\n        /**\r\n         * 1. Identity: `F.map(id) = F`\r\n         * 2. Composition: `F.map(compose(bc, ab)) == F.map(ab).map(bc)`\r\n         */\r\n        const r = right(1);\r\n        const law1 = r.map(id).getOrElse(id) === r.getOrElse(id);\r\n        const law2 = r.map(compose(exclaim, inc)).getOrElse(id) === r.map(inc).map(exclaim).getOrElse(id);\r\n        \r\n        expect(law1).toBe(true);\r\n        expect(law2).toBe(true);\r\n    });\r\n\r\n    it(\"can get value when not null or undefined\", () => {\r\n        const arr = [1];\r\n        const obj = { 1: 1 };\r\n        const sym = Symbol();\r\n\r\n        expect(right(1).getOrElse(id)).toEqual(1);\r\n        expect(right(\"1\").getOrElse(id)).toEqual(\"1\");\r\n        expect(right(true).getOrElse(id)).toEqual(true);\r\n        expect(right(arr).getOrElse(id)).toEqual(arr);\r\n        expect(right(obj).getOrElse(id)).toEqual(obj);\r\n        expect(right(sym).getOrElse(id)).toEqual(sym);\r\n    });\r\n\r\n    it(\"always returns the same `left`\", () => {\r\n        const l1 = left(e);\r\n        const l2 = l1.map(inc);\r\n        const l3 = l2.ap(l1);\r\n        const l4 = l3.chain(() => left(e));\r\n\r\n        expect(l1 === l2).toBe(true);\r\n        expect(l1).toBe(l3);\r\n        expect(l2).toBe(l3);\r\n        expect(l3).toBe(l4);\r\n    });\r\n\r\n    it(\"returns a default value when null or undefined\", () => {\r\n        const l = left(e);\r\n        expect(l.getOrElse(id)).toEqual(e);\r\n        expect(l.getOrElse(id)).toEqual(e);\r\n    });\r\n\r\n    it(\"can map when value exists\", () => {\r\n        const r = right(1)\r\n            .map(inc)\r\n            .map(double)\r\n            .map(exclaim)\r\n            .getOrElse(id);\r\n\r\n        expect(r).toEqual(\"4!!\");\r\n    });\r\n\r\n    it(\"can map when null or undefined\", () => {\r\n        const l1 = left(e)\r\n            .map(x => x ? true : false)\r\n            .map(b => b ? 1 : 0)\r\n            .getOrElse(id);\r\n        const l2 = left(e)\r\n            .map(x => x ? true : false)\r\n            .map(b => b ? 1 : 0)\r\n            .getOrElse(id);\r\n\r\n        expect(l1).toEqual(e);\r\n        expect(l2).toEqual(e);\r\n    });\r\n\r\n    it(\"returns left if any map operation fails\", () => {\r\n        const obj: { [key: string]: any } = { test: 123 };\r\n        const o = right(obj);\r\n        const r1 = o\r\n            .map(x => x.doesnotexist.doesnotexist)\r\n            .getOrElse(id);\r\n        const r2 = o\r\n            .map(x => x.doesnotexist)\r\n            .getOrElse(id);\r\n\r\n        expect(r1).toBeInstanceOf(Error);\r\n        expect(r2).toBe(undefined);\r\n    });\r\n\r\n    it(\"can apply a function in another Either\", () => {\r\n        const r = right(1);\r\n        const rinc = right(inc);\r\n        expect(rinc.ap(r).getOrElse(id)).toEqual(2);\r\n    });\r\n\r\n    it(\"can apply a curried function with multiple parameters\", () => {\r\n        const r1 = right(2);\r\n        const r2 = right(3);\r\n        const rmult = right(mult);\r\n        expect(rmult.ap(r1).ap(r2).getOrElse(id)).toEqual(6);\r\n    });\r\n\r\n    it(\"can chain nested Eithers into a single one\", () => {\r\n        const r = right(1);\r\n        const unnested = r.chain(x => tryCatch(() => exclaim(x)));\r\n        expect(unnested.getOrElse(id)).toBe(\"1!!\");\r\n    });\r\n});\r\n\r\ndescribe(\"tryCatch\", () => {\r\n    it(\"returns an Either on success\", () => {\r\n        const o = tryCatch(() => JSON.parse(`{\"foo\":\"bar\"}`));\r\n\r\n        expect(o.map(x => x.foo).map(exclaim).getOrElse(() => \"\")).toEqual(\"bar!!\");\r\n    });\r\n\r\n    it(\"returns an Either on error\", () => {\r\n        const o = tryCatch(() => JSON.parse(\"?@*#!(%InvalidJSON?s9d8fsdf\"));\r\n\r\n        expect(o.getOrElse(() => e)).toEqual(e);\r\n    });\r\n});\r\n"]}