{"version":3,"file":"Chain.js","sourceRoot":"","sources":["../../../../Util/fp/Algebras/Chain.ts"],"names":[],"mappings":"","sourcesContent":["import { HKT, URIS, URIS2, Type, Type2 } from \"../HKT\";\r\nimport { Apply, Apply1, Apply2 } from \"./Apply\";\r\n\r\nexport interface Chain<F> extends Apply<F> {\r\n    readonly chain: <A, B>(f: (a: A) => HKT<F, B>) => (fa: HKT<F, A>) => HKT<F, B>;\r\n}\r\n\r\nexport interface Chain1<F extends URIS> extends Apply1<F> {\r\n    readonly chain: <A, B>(f: (a: A) => Type<F, B>) => (fa: Type<F, A>) => Type<F, B>;\r\n}\r\n\r\nexport interface Chain2<F extends URIS2> extends Apply2<F> {\r\n    readonly chain: <E, A, B>(f: (a: A) => Type2<F, E, B>) => (fa: Type2<F, E, A>) => Type2<F, E, B>;\r\n}\r\n"]}