{"version":3,"file":"Functor.js","sourceRoot":"","sources":["../../../../Util/fp/Algebras/Functor.ts"],"names":[],"mappings":"","sourcesContent":["import { HKT, URIS, URIS2, Type, Type2 } from \"../HKT\";\r\n\r\n/**\r\n * Functors have to obey 2 laws:\r\n * \r\n * 1. Identity: F.map(id) = F\r\n * 2. Composition: F.map(compose(bc, ab)) == F.map(ab).map(bc)\r\n */\r\n\r\nexport interface Functor<F> {\r\n    readonly map: <A, B>(f: (a: A) => B) => (fa: HKT<F, A>) => HKT<F, B>;\r\n}\r\n\r\nexport interface Functor1<F extends URIS> {\r\n    readonly map: <A, B>(f: (a: A) => B) => (fa: Type<F, A>) => Type<F, B>;\r\n}\r\n\r\nexport interface Functor2<F extends URIS2> {\r\n    readonly map: <E, A, B>(f: (a: A) => B) => (fa: Type2<F, E, A>) => Type2<F, E, B>;\r\n}\r\n"]}