{"version":3,"file":"Apply.js","sourceRoot":"","sources":["../../../../Util/fp/Algebras/Apply.ts"],"names":[],"mappings":"","sourcesContent":["import { HKT, URIS, URIS2, Type, Type2, } from \"../HKT\";\r\nimport { Functor, Functor1, Functor2 } from \"./Functor\";\r\n\r\nexport interface Apply<F> extends Functor<F> {\r\n    readonly ap: <A, B>(fab: HKT<F, (a: A) => B>) => (fa: HKT<F, A>) => HKT<F, B>;\r\n}\r\n\r\nexport interface Apply1<F extends URIS> extends Functor1<F> {\r\n    readonly ap: <A, B>(fab: Type<F, (a: A) => B>) => (fa: Type<F, A>) => Type<F, B>;\r\n}\r\n\r\nexport interface Apply2<F extends URIS2> extends Functor2<F> {\r\n    readonly ap: <E, A, B>(fab: Type2<F, E, (a: A) => B>) => (fa: Type2<F, E, A>) => Type2<F, E, B>;\r\n}\r\n"]}