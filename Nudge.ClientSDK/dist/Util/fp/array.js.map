{"version":3,"file":"array.js","sourceRoot":"","sources":["../../../Util/fp/array.ts"],"names":[],"mappings":"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","sourcesContent":["import { Predicate, Comparator, compose, id } from \"./function\";\r\nimport { tryCatch, option } from \"./Instances/Option\";\r\nimport { Applicative1, Applicative2 } from \"./Algebras/Applicative\";\r\nimport { Type, URIS, URIS2, Type2 } from \"./HKT\";\r\n\r\n/**\r\n * Array utils\r\n */\r\nexport const reverse = <A>(as: A[]) => as.reverse();\r\nexport const sort = <A>(f: Comparator<A>) => (as: A[]) => as.sort(f);\r\nexport const every = <A>(f: Predicate<A>) => (as: A[] = []) => as.every(f);\r\nexport const some = <A>(f: Predicate<A>) => (as: A[] = []) => as.some(f);\r\nexport const filter = <A>(f: Predicate<A>) => (as: A[] = []) => as.filter(f);\r\nexport const filterUndef = <T>(ts: (T | undefined)[]): T[] => ts.filter((t: T | undefined): t is T => !!t);\r\nexport const map = <A, B>(f: (a: A) => B) => (as: A[] = []) => as.map(f);\r\nexport const reduce = <A, B>(f: (acc: B, v: A) => B, init: B) => (as: A[] = []) => as.reduce(f, init);\r\nexport const flatten = <A>(a: A[][]): A[] => {\r\n    if (\"flatMap\" in Array.prototype) return a.flatMap(id);\r\n    let result: A[] = [];\r\n    for (let arr of a) {\r\n        result = result.concat(arr);\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\nexport const groupBy = <A>(f: (a: A) => string) => (as: A[] = []) => reduce<A, { [k: string]: A[] }>((acc, v) => {\r\n    const [nextK, oldV = []] = [f(v), acc[f(v)]];\r\n    acc[nextK] = oldV.concat(v);\r\n    return acc;\r\n}, {})(as);\r\nexport const uniq = <A>(as: A[] = []) => as.length === 0 ? as : Array.from(new Set(as));\r\nexport const uniqBy = <A, B>(f: (a: A) => B) => (as: A[] = []) => as.length === 0 ? as : compose(\r\n    map<[B, A], A>(([_, a]) => a),\r\n    kvs => Array.from(new Map(kvs)),\r\n    map<A, [B, A]>(a => [f(a), a]),\r\n)(as);\r\n\r\nexport const optHead = <A>(as: A[] = []) => tryCatch(() => as[0]);\r\nexport const head = <A>(as: A[] = []) => optHead(as).getOrElse(() => undefined);\r\nexport const tail = <A>(as: A[] = []) => as.slice(1);\r\nexport const optLast = <A>(as: A[] = []) => tryCatch(() => as[as.length - 1]);\r\nexport const last = <A>(as: A[] = []) => optLast(as).getOrElse(() => undefined);\r\nexport const range = (a: number, b?: number) => b ? [...Array(b - a).keys()].map(n => n + a) : [...Array(a).keys()];\r\nexport const isEmpty = <A>(as: A[]) => as.length === 0;\r\nexport const optFind = <A>(f: Predicate<A>) => (as: A[]) => option.of(as.find(f));\r\n\r\nexport const empty = [];\r\nexport const traverse1 = <F extends URIS, A, B>(F: Applicative1<F>) => (f: (a: A) => Type<F, B>) => (as: A[]) =>\r\n    as.reduce((acc, a) => F.ap(F.map((bs: B[]) => (b: B) => bs.concat([b]))(acc))(f(a)), F.of<B[]>(empty));\r\nexport const traverse2 = <F extends URIS2, E, A, B>(F: Applicative2<F>) => (f: (a: A) => Type2<F, E, B>) => (as: A[]) =>\r\n    as.reduce((acc, a) => F.ap<E, B, B[]>(F.map<E, B[], (b: B) => B[]>((bs: B[]) => (b: B) => bs.concat([b]))(acc))(f(a)), F.of<E, B[]>(empty));\r\nexport const sequence1 = <F extends URIS, A>(F: Applicative1<F>) => traverse1<F, Type<F, A>, A>(F)(id);\r\nexport const sequence2 = <F extends URIS2, E, A,>(F: Applicative2<F>) => traverse2<F, E, Type2<F, E, A>, A>(F)(id);\r\n\r\nexport const splitEvery = <A>(n: number) => (as: A[]) => as.reduce((acc, a) => {\r\n    const lst = last(acc);\r\n    if (lst && lst.length < n) lst.push(a);\r\n    else acc.push([a]);\r\n    return acc;\r\n}, [] as unknown as A[][]);\r\n"]}