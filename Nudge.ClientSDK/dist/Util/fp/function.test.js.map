{"version":3,"file":"function.test.js","sourceRoot":"","sources":["../../../Util/fp/function.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { compose, pipe, once } from \"./function\";\r\n\r\nconst inc = (x: number) => x + 1;\r\nconst double = (x: number) => x * 2;\r\nconst mult = (x: number, y: number) => x * y;\r\nconst exclaim = (x: number | string) => x + \"!!\";\r\n\r\ndescribe(\"compose\", () => {\r\n    it(\"handles a single function\", () => {\r\n        const f = compose(inc);\r\n        expect(f(1)).toEqual(2);\r\n    });\r\n\r\n    it(\"handles multiple parameters for the first function\", () => {\r\n        const f = compose(exclaim, mult);\r\n        expect(f(2, 3)).toEqual(\"6!!\");\r\n    });\r\n\r\n    it(\"composes up to 10 functions\", () => {\r\n        expect(compose(inc, double, inc)(2)).toEqual(7);\r\n        expect(compose(inc, double, inc, double)(2)).toEqual(11);\r\n        expect(compose(inc, double, inc, double, inc)(2)).toEqual(15);\r\n        expect(compose(inc, double, inc, double, inc, double)(2)).toEqual(23);\r\n        expect(compose(inc, double, inc, double, inc, double, inc)(2)).toEqual(31);\r\n        expect(compose(inc, double, inc, double, inc, double, inc, double)(2)).toEqual(47);\r\n        expect(compose(inc, double, inc, double, inc, double, inc, double, inc)(2)).toEqual(63);\r\n        expect(compose(inc, double, inc, double, inc, double, inc, double, inc, double)(2)).toEqual(95);\r\n    });\r\n});\r\n\r\ndescribe(\"pipe\", () => {\r\n    it(\"handles a single function\", () => {\r\n        const f = pipe(inc);\r\n        expect(f(1)).toEqual(2);\r\n    });\r\n\r\n    it(\"handles multiple parameters for the first function\", () => {\r\n        const f = pipe(mult, exclaim);\r\n        expect(f(2, 3)).toEqual(\"6!!\");\r\n    });\r\n\r\n    it(\"composes up to 10 functions\", () => {\r\n        expect(pipe(inc, double, inc)(2)).toEqual(7);\r\n        expect(pipe(double, inc, double, inc)(2)).toEqual(11);\r\n        expect(pipe(inc, double, inc, double, inc)(2)).toEqual(15);\r\n        expect(pipe(double, inc, double, inc, double, inc)(2)).toEqual(23);\r\n        expect(pipe(inc, double, inc, double, inc, double, inc)(2)).toEqual(31);\r\n        expect(pipe(double, inc, double, inc, double, inc, double, inc)(2)).toEqual(47);\r\n        expect(pipe(inc, double, inc, double, inc, double, inc, double, inc)(2)).toEqual(63);\r\n        expect(pipe(double, inc, double, inc, double, inc, double, inc, double, inc)(2)).toEqual(95);\r\n    });\r\n});\r\n\r\ndescribe(\"once\", () => {\r\n    it(\"creates a function that will be called once\", () => {\r\n        const mockFn = jest.fn();\r\n        const onceMockFn = once(mockFn);\r\n\r\n        onceMockFn(1, 2, 3);\r\n        expect(mockFn).toBeCalledWith(1, 2, 3);\r\n\r\n        onceMockFn();\r\n        onceMockFn();\r\n        onceMockFn();\r\n        onceMockFn();\r\n        onceMockFn();\r\n        expect(mockFn.mock.calls.length).toBe(1);\r\n    });\r\n});\r\n"]}