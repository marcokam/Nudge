{"version":3,"file":"withBaseAddress.js","sourceRoot":"","sources":["../../../Api/RequestTransformers/withBaseAddress.ts"],"names":[],"mappings":";;;;;;;;;;;AAEA,yGAAyG;AACzG,IAAM,eAAe,GAAG,UAAC,WAAmB,IAA2B,OAAA,UAAC,OAAmB,EAAE,IAAuB;IAChH,IAAM,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/D,IAAM,YAAY,GAAG,CAAC,OAAO,KAAK,OAAO,CAAC,GAAG,CAAC;QAC1C,CAAC,CAAC,OAAO;QACT,CAAC,uBACM,OAAO,KACV,GAAG,EAAE,OAAO,GACf,CAAC;IACN,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC;AAC9B,CAAC,EATsE,CAStE,CAAC;AACF,eAAe,eAAe,CAAC","sourcesContent":["import { ApiRequestMiddleware, ApiRequest, ApiRequestInvoker, ApiResponse } from \"../ApiInterfaces\";\r\n\r\n//NOTE: This requires a polyfil for URL for IE if a client wants to use this and support IE. (eg Outlook)\r\nconst withBaseAddress = (baseAddress: string): ApiRequestMiddleware => (request: ApiRequest, next: ApiRequestInvoker): Promise<ApiResponse> => {\r\n    const fullUrl = (new URL(request.url, baseAddress)).toString();\r\n    const finalRequest = (fullUrl === request.url)\r\n        ? request\r\n        : {\r\n            ...request,\r\n            url: fullUrl\r\n        };\r\n    return next(finalRequest);\r\n};\r\nexport default withBaseAddress;\r\n"]}