{"version":3,"file":"withHeader.js","sourceRoot":"","sources":["../../../Api/RequestTransformers/withHeader.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAChD,OAAiB,EAAE,QAAQ,EAAE,MAAM,8BAA8B,CAAC;AAElE,IAAM,UAAU,GAAG,UAAC,UAAkB,EAAE,mBAAqC,IAA2B,OAAA,UAAC,OAAmB,EAAE,IAAuB;IAEjJ,IAAM,iBAAiB,GAAG,QAAQ,CAAS,mBAAmB,CAAC,CAAC;IAChE,OAAO,IAAI,CAAC,SAAS,CAAgB,iBAAiB,CAAC;SAClD,IAAI,CAAC,UAAA,KAAK;;QACP,IAAM,WAAW,yBACV,OAAO,KACV,OAAO,wBACA,OAAO,CAAC,OAAO,gBACjB,UAAU,IAAG,KAAK,SAE1B,CAAC;QACF,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;AACX,CAAC,EAduG,CAcvG,CAAC;AACF,eAAe,UAAU,CAAC","sourcesContent":["import { ApiRequestMiddleware, ApiRequest, ApiRequestInvoker, ApiResponse } from \"../ApiInterfaces\";\r\nimport { Task } from \"~/Util/fp/Instances/Task\";\r\nimport Producer, { toResult } from \"~/Util/fp/Instances/Producer\";\r\n\r\nconst withHeader = (headerName: string, headerValueProducer: Producer<string>): ApiRequestMiddleware => (request: ApiRequest, next: ApiRequestInvoker): Promise<ApiResponse> => {\r\n\r\n    const headerValueResult = toResult<string>(headerValueProducer);\r\n    return Task.toPromise<Error, string>(headerValueResult)\r\n        .then(value => {\r\n            const nextRequest = {\r\n                ...request,\r\n                headers: {\r\n                    ...request.headers,\r\n                    [headerName]: value\r\n                }\r\n            };\r\n            return next(nextRequest);\r\n        });\r\n};\r\nexport default withHeader;"]}