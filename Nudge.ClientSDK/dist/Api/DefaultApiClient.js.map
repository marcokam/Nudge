{"version":3,"file":"DefaultApiClient.js","sourceRoot":"","sources":["../../Api/DefaultApiClient.ts"],"names":[],"mappings":"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","sourcesContent":["import ApiClient, { ApiRequestOptions, ApiRequest, ApiRequestInvoker, ApiResponse } from \"./ApiInterfaces\";\r\n\r\nconst optionsToRequest = (url: string, options: ApiRequestOptions): ApiRequest => {\r\n    const method = options.method || \"GET\";\r\n    return {\r\n        url,\r\n        ...options,\r\n        method\r\n    };\r\n}\r\n\r\nclass DefaultApiClient implements ApiClient {\r\n\r\n\r\n    private readonly invoker: ApiRequestInvoker;\r\n\r\n    constructor(invoker: ApiRequestInvoker) {\r\n        this.invoker = invoker;\r\n    }\r\n    \r\n    private request = (url: string, options: ApiRequestOptions | undefined): Promise<ApiResponse> => {\r\n\r\n        const request = optionsToRequest(url, options || {});\r\n        return this.invoker(request);\r\n    }\r\n\r\n    private createRequestNoBody = (method: string) => (url: string, options?: ApiRequestOptions): Promise<ApiResponse> =>\r\n        this.request(url, {\r\n            method,\r\n            ...options\r\n        });\r\n\r\n    private createRequestBody = (method: string) => (url: string, data: any, options?: ApiRequestOptions): Promise<ApiResponse> =>\r\n        this.request(url, {\r\n            method,\r\n            body: JSON.stringify(data),\r\n            ...options\r\n        });\r\n\r\n    private json = (url: string, options: ApiRequestOptions | undefined): Promise<any> => {\r\n\r\n        const request = optionsToRequest(url, options || {});\r\n        return this.invoker(request)\r\n            .then(response => {\r\n                if (response.status === 204) {\r\n                    return Promise.resolve(undefined);\r\n                }\r\n                return response.json();\r\n            });\r\n    }\r\n\r\n    private createJsonNoBody = (method: string) => (url: string, options?: ApiRequestOptions): Promise<any> =>\r\n        this.json(url, {\r\n            method,\r\n            ...options\r\n        });\r\n\r\n    private createJsonBody = (method: string) => (url: string, data: any, options?: ApiRequestOptions): Promise<any> =>\r\n        this.json(url, {\r\n            method,\r\n            body: JSON.stringify(data),\r\n            ...options\r\n        });\r\n\r\n    get = this.createRequestNoBody(\"GET\");\r\n    post = this.createRequestBody(\"POST\");\r\n    patch = this.createRequestBody(\"PATCH\");\r\n    delete = this.createRequestBody(\"DELETE\");\r\n    put = this.createRequestBody(\"PUT\");    \r\n\r\n    getJson = this.createJsonNoBody(\"GET\");\r\n    postJson = this.createJsonBody(\"POST\");\r\n    patchJson = this.createJsonBody(\"PATCH\");\r\n    deleteJson = this.createJsonBody(\"DELETE\");\r\n    putJson = this.createJsonBody(\"PUT\");    \r\n}\r\n\r\nexport default DefaultApiClient;"]}