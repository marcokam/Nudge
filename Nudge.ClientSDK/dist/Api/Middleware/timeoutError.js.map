{"version":3,"file":"timeoutError.js","sourceRoot":"","sources":["../../../Api/Middleware/timeoutError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAClD,OAAO,YAAY,MAAM,wBAAwB,CAAC;AAGlD,IAAM,YAAY,GAAG,UAAC,gBAAwB,IAA2B,OAAA,UAAC,OAAmB,EAAE,IAAuB;IAClH,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,IAAI,gBAAgB,CAAC;IACtD,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,SAAS,CAAC;SACvC,IAAI,CAAC,UAAA,MAAM;QACR,IAAI,MAAM,IAAI,IAAI,EAAE;YAChB,MAAM,IAAI,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;SAClD;QACD,OAAO,MAAqB,CAAC;IACjC,CAAC,CAAC,CAAA;AACV,CAAC,EATwE,CASxE,CAAC;AACF,eAAe,YAAY,CAAC","sourcesContent":["import { RaceTimeout } from \"~/Util/PromiseUtils\";\r\nimport TimeoutError from \"../Errors/TimeoutError\";\r\nimport { ApiRequestMiddleware, ApiRequest, ApiRequestInvoker, ApiResponse } from \"../ApiInterfaces\";\r\n\r\nconst timeoutError = (defaultTimeoutMs: number): ApiRequestMiddleware => (request: ApiRequest, next: ApiRequestInvoker): Promise<ApiResponse> => {\r\n    const timeoutMs = request.timeout || defaultTimeoutMs;\r\n    return RaceTimeout(next(request), timeoutMs)\r\n        .then(result => {\r\n            if (result == null) {\r\n                throw new TimeoutError(timeoutMs, request.url);\r\n            }\r\n            return result as ApiResponse;\r\n        })\r\n};\r\nexport default timeoutError;"]}