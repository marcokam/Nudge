{"version":3,"file":"AreEquals.js","sourceRoot":"","sources":["../../Comparison/AreEquals.ts"],"names":[],"mappings":"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","sourcesContent":["import { AreEqual } from \"./ComparisonInterfaces\";\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nexport const regExpEquals = (x: RegExp, y: RegExp) => x.toString() == y.toString();\r\nexport const dateEquals = (x: Date, y: Date) => x.getTime() == y.getTime();\r\nexport const strictEquals = <T>(x: T, y: T) => x === y;\r\nexport const lenientEquals = <T>(x: T, y: T) => x == y;\r\n\r\nconst maybeDate = (x: any, y: any): boolean | undefined => {\r\n    const xIsDate = x instanceof Date;\r\n    const yIsDate = y instanceof Date;\r\n    if (xIsDate !== yIsDate) {\r\n        return false;\r\n    }\r\n    if (xIsDate && yIsDate) {\r\n        return dateEquals(x as any as Date, y as any as Date);\r\n    }\r\n    return undefined;\r\n};\r\n\r\nconst maybeArray = (recurse: () => AreEqual<any>, x: any, y: any): boolean | undefined => {\r\n    const xIsArray = Array.isArray(x);\r\n    const yIsArray = Array.isArray(y);\r\n    if (xIsArray !== yIsArray) {\r\n        return false;\r\n    }\r\n    if (xIsArray && xIsArray) {\r\n        const length = x.length;\r\n        if (length != y.length) {\r\n            return false;\r\n        }\r\n        for (let i = length; i--; i !== 0) {\r\n            if (!recurse()(x[i], y[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }    \r\n    return undefined;\r\n}\r\n\r\nconst maybeObject = <T>(recurse: () => AreEqual<any>, x: T, y: T): boolean | undefined => {\r\n\r\n    if (typeof x !== \"object\" && typeof y !== \"object\") {\r\n        return undefined;\r\n    }\r\n    const keys = Object.keys(x);\r\n    const length = keys.length;\r\n\r\n    if (length !== Object.keys(y).length) {\r\n        return false;\r\n    }\r\n\r\n    for (let i = length; i--; i !== 0) {\r\n        if (!hasOwnProperty.call(y, keys[i])) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const xObj = x as any;\r\n    const yObj = y as any;\r\n    for (let i = length; i-- !== 0;) {\r\n        const key = keys[i];\r\n        if (!recurse()(xObj[key], yObj[key])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nconst maybeRegEx = <T>(x: T, y: T): boolean | undefined => {\r\n    const xIsRegEx = x instanceof RegExp;\r\n    const yIsRegEx = y instanceof RegExp;\r\n    if (xIsRegEx !== yIsRegEx) {\r\n        return false;\r\n    }\r\n    if (xIsRegEx && yIsRegEx) {\r\n        return regExpEquals(x as any as RegExp, y as any as RegExp);\r\n    }\r\n    return undefined;\r\n}\r\n\r\nconst deepEqualsInternal = <T>(recurse: () => AreEqual<any>) => (a: T, b: T): boolean => {\r\n    \r\n    if (strictEquals(a, b)) {\r\n        return true;\r\n    }\r\n  \r\n    if (a === null || b === null || a === undefined || b === undefined) {\r\n        return a!==a && b!==b;\r\n    }\r\n\r\n    // Compare Arrays\r\n    const mArray = maybeArray(recurse, a, b);\r\n    if (mArray !== undefined) {\r\n        return mArray;\r\n    }\r\n\r\n    // Compare Dates\r\n    const mDate = maybeDate(a, b);\r\n    if (mDate !== undefined) {\r\n        return mDate;\r\n    }\r\n\r\n    // Compare RegExs\r\n    const mRegEx = maybeRegEx(a, b);\r\n    if (mRegEx !== undefined) {\r\n        return mRegEx;\r\n    }\r\n\r\n    // Compare Objects\r\n    const mObj = maybeObject(recurse, a, b);\r\n    if (mObj !== undefined) {\r\n        return mObj\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nexport const deepEqualsWithDepth = <T>(maxLevels: number): AreEqual<T> => {    \r\n    const step = maxLevels > 1 && maxLevels < Infinity ? 1 : 0;     \r\n    return maxLevels > 1\r\n        ? deepEqualsInternal(() => deepEqualsWithDepth(maxLevels - step))\r\n        : deepEqualsInternal(() => strictEquals);\r\n};\r\nconst defaultMaximumDepth = 100;\r\nexport const deepEquals = deepEqualsWithDepth(defaultMaximumDepth);\r\nexport const shallowEquals = deepEqualsWithDepth(1);"]}