{"version":3,"file":"teamData.js","sourceRoot":"","sources":["../../../Data/Team/teamData.ts"],"names":[],"mappings":"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","sourcesContent":["import { Task } from \"~/Util/fp/Instances/Task\";\r\nimport { Option, tryCatch } from \"~/Util/fp/Instances/Option\";\r\nimport { optHead, optFind } from \"~/Util/fp/array\";\r\nimport { getEntity } from \"~/Util/apiUtils\";\r\nimport { CurrentUserSettings } from \"~/Data/User/UserInterfaces\";\r\nimport { getCurrentUserSettings } from \"~/Data/User/userData\";\r\nimport { GetEntityOptions } from \"~/Data/DataInterfaces\";\r\nimport { ITeam } from \"~/Data/NudgeInterfaces\";\r\nimport { NudgeUris } from \"~/Uris/NudgeUris\";\r\nimport { Pair } from \"~/Util/fp/Instances/Pair\";\r\nimport { optProp, propOr } from \"~/Util/fp/object\";\r\nimport { alphaCompareByDir } from \"~/Util/sortUtils\";\r\nimport { Compare } from \"~/Util/fp/Instances/Compare\";\r\n\r\nconst getReportingTeams = (getEntityOptions: GetEntityOptions) =>\r\n    getEntity(\r\n        NudgeUris.v2.teams()._uri,\r\n        { q: \"companyAccount.status:active AND (NOT type:personalTeam)\", fields: \"uri,teamName\" },\r\n        getEntityOptions\r\n    )\r\n        .map((teams: ITeam[] = []) => teams.sort(\r\n            Compare.of(alphaCompareByDir(false))\r\n                .contramap(propOr(\"type\", \"\"))\r\n                .concat(Compare.of(alphaCompareByDir(true))\r\n                    .contramap(propOr(\"teamName\", \"\")))\r\n                .run));\r\n\r\ninterface TeamDisplay {\r\n    uri: string;\r\n    teamName: string;\r\n}\r\n\r\n\r\nconst allTeamsUri: TeamDisplay = { uri: \"/v2/users/current/teammates\", teamName: \"All Teams\" };\r\nconst allCollabsUri: TeamDisplay = { uri: \"/v2/userConnections\", teamName: \"All collaborators\" };\r\nconst allTeamsAndCollabsUri: TeamDisplay = { uri: \"/v2/users/current/collaborators\", teamName: \"You & Collaborators\" };\r\n\r\nexport const aggregateTeamUris = {\r\n    allTeamsUri,\r\n    allCollabsUri,\r\n    allTeamsAndCollabsUri,\r\n};\r\n\r\nexport const getTeamsAndSelectedTeam = (userSettingsKey: keyof CurrentUserSettings, defaultTeamUri = \"\", getEntityOptions: GetEntityOptions) =>\r\n    Task.of((userSettings: CurrentUserSettings) => (teams: ITeam[]) => Pair.of(userSettings, teams))\r\n        .ap(getCurrentUserSettings({ fields: userSettingsKey }))\r\n        .ap(getReportingTeams(getEntityOptions))\r\n        .map(settingsTeams => settingsTeams\r\n            .map((teams = []) => teams.map(({ uri = \"\", teamName = \"\" }) => ({ uri, teamName })))\r\n            .merge((userSettings, teams) => ({\r\n                selectedTeam: tryCatch(() => userSettings[userSettingsKey])\r\n                    .chain(optProp(\"teamUri\"))\r\n                    .chain((userSettingsTeamUri: string) => optFind<TeamDisplay>(team => team.uri === userSettingsTeamUri)(teams) as unknown as Option<TeamDisplay>)\r\n                    .chain(optProp(\"uri\"))\r\n                    .getOrElse(() => defaultTeamUri ? defaultTeamUri : optHead(teams)\r\n                        .chain(optProp(\"uri\"))\r\n                        .getOrElse(() => \"\")),\r\n                userSettings,\r\n                teams,\r\n            })));\r\n"]}