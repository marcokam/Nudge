{"version":3,"file":"InteractionsData.js","sourceRoot":"","sources":["../../../Data/Interactions/InteractionsData.ts"],"names":[],"mappings":"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","sourcesContent":["import { isBefore } from \"date-fns\";\r\nimport { Person, Interactions } from \"../NudgeInterfaces\";\r\nimport { List } from \"~/Util/fp/Instances/List\";\r\nimport { option } from \"~/Util/fp/Instances/Option\";\r\nimport { isNotNull } from \"~/Util/fp/function\";\r\nimport { RelationshipStrength } from \"../Person/Relationship/relationshipData\";\r\n\r\nenum CommunicationMedium {\r\n    email = \"email\",\r\n    meeting = \"meeting\",\r\n}\r\nenum CommunicationDirection {\r\n    inbound = \"inbound\",\r\n    outbound = \"outbound\",\r\n    meeting = \"meeting\",\r\n}\r\ninterface CommunicationProps {\r\n    type: Extract<keyof Interactions, \"lastInbound\" | \"lastOutbound\" | \"lastMeeting\" | \"nextMeeting\">;\r\n    medium: CommunicationMedium;\r\n    direction: CommunicationDirection;\r\n    teamMember: Extract<keyof Interactions, \"lastInboundTeamMember\" | \"lastOutboundTeamMember\" | \"lastMeetingTeamMember\" | \"nextMeetingTeamMember\">;\r\n    person: Extract<keyof Interactions, \"lastInboundPerson\" | \"lastOutboundPerson\" | \"lastMeetingPerson\" | \"nextMeetingPerson\">;\r\n}\r\nexport type Communication = Pick<CommunicationProps, \"type\" | \"medium\" | \"direction\"> & {\r\n    date: string;\r\n    teamMember: Partial<Person> | undefined;\r\n    person: Partial<Person> | undefined;\r\n}\r\ninterface Relationship {\r\n    strength: RelationshipStrength;\r\n    strengthTeamMember: Partial<Person>;\r\n    strengthPerson: Partial<Person>;\r\n}\r\n\r\nconst communicationProps: readonly CommunicationProps[] = [\r\n    { type: \"lastInbound\", medium: CommunicationMedium.email, direction: CommunicationDirection.inbound, teamMember: \"lastInboundTeamMember\", person: \"lastInboundPerson\" },\r\n    { type: \"lastOutbound\", medium: CommunicationMedium.email, direction: CommunicationDirection.outbound, teamMember: \"lastOutboundTeamMember\", person: \"lastOutboundPerson\" },\r\n    { type: \"lastMeeting\", medium: CommunicationMedium.meeting, direction: CommunicationDirection.meeting, teamMember: \"lastMeetingTeamMember\", person: \"lastMeetingPerson\" },\r\n    { type: \"nextMeeting\", medium: CommunicationMedium.meeting, direction: CommunicationDirection.meeting, teamMember: \"nextMeetingTeamMember\", person: \"nextMeetingPerson\" },\r\n];\r\nconst extractCommunications = (is: Interactions = {}, defaultPerson?: Partial<Person>) =>\r\n    communicationProps.map((c) => option.of(is[c.type])\r\n        .map(date => ({ ...c, date, teamMember: is[c.teamMember], person: is[c.person] || defaultPerson }))\r\n        .getOrElse(() => undefined))\r\n        .filter<Communication>(isNotNull);\r\n\r\nexport const getAllCommunications = (people: Partial<Person>[]) =>\r\n    List.fromArray(people)\r\n        .chain(p => List.fromArray(extractCommunications(p.teamInteractions, p)))\r\n        .toArray();\r\nexport const getLastCommunication = (groups: Communication[]) =>\r\n    groups.reduce((acc, group) => acc.date\r\n        ? isBefore(group.date, new Date()) && isBefore(acc.date, group.date)\r\n            ? group\r\n            : acc\r\n        : group, {} as unknown as Communication);\r\n"]}